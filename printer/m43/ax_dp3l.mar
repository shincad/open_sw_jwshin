	.PROGRAM	apldp3l
	.HEADING	"M4324 DATA PROCESS PASS 3 LIBRARY MODULE"
	.LIST		NOCOND,NOEXP
;********************************************************
;							*
;	M4324 DATA PROCESS PASS 3 APPLICATION MODULE	*
;							*
;	FILE NAME	AX_DP3L.MAR			*
;	CREATED		28/APR/1991			*
;							*
;********************************************************
;
	.EXPORT		INIDP3,INIMEX,INIPR, INIPR1,CRHOME
	.EXPORT		HSEEMD,HSMODE,HSMDCH
	.EXPORT		CHKDP3,CHKHDC,GETPKT,SETECC,GETPFP
	.EXPORT		CHKPMD,SELPMD,SETPMD,INSERT,CHKEJC,EJECT
	.EXPORT		CHKLF, FEEDF, FEEDF1,FEEDR, FEEDR1,FEEDN
	.EXPORT		CUTPF, CUTPF1,PRT,   SETADV,SETLCD,SETRS

	.IMPORT		D3PTBL,D3HTBL,D3HPKT,D3LPKT,D3WPKT
	.IMPORT		PAMDTB,MGCVR
	.IMPORT		CHKCAN,WTACTF
	.IMPORT		SETECD,SETECE,SETPMS,SETPMF,SETPMB,SETPMA,SETPHM
	.IMPORT		SETRS1,SETRS2,SETRS3,CRINI, CRHM,  RSINI, PBINI
	.IMPORT		HSAMD, HSMMD, HSOPEN,HSOPSS,HSAUTO,HSFIX
	.IMPORT		LFFW,  LFRW,  LFFWD, LFRVS, LFRVS0
	.IMPORT		INSFRM,INSSHT,INS260,INSAF1,INSAF2,INSAF3,INSAF4
	.IMPORT		EJCFRM,EJCBTM,EJCSHT,GETEJF,GETEJB,GETEJS
	.IMPORT		PRCHK, SETPRT,PRT11, PRT12, PRT13, SETPM2,RETPM2

	.INCLUDE	"COMMON.H"
	.INCLUDE	"M43RTM.H"
	.INCLUDE	"SCIIOS.H"
	.INCLUDE	"PNLIOS.H"
	.INCLUDE	"GAINT.H"
	.INCLUDE	"SYSRAM.H"
	.INCLUDE	"AX_EEP.H"
	.INCLUDE	"AX_IOS.H"
	.INCLUDE	"AX_LF.H"
	.INCLUDE	"AX_DP3.H"
	.INCLUDE	"AX_RAM.H"
	.PAGE
	.SECTION	APL2,CODE,ALIGN=16
	.PAGE
;
;	INITIALIZE DDP3
;
;	IN	NONE
;
;	OUT	NONE
;
INID_1:					;
	CALIOS	#BZEON			; CHECK ERROR TONE ON
	LDC.B	#PAGE MGCVR,EP		;
	MOV.W	#MGCVR,R4		; SET COVER OPEN MESSAGE
	MOV.B	#ZN,R5			; SET DIRECT OUTPUT MODE
	CALIOS	#LCDS1			; DISPLAY COVER OPEN MESSAGE
INID_2:	BTST.W	#QCVSW,@SWSF:8		;
	BEQ	INID_2			; BR IF COVER OPEN
	CALIOS	#BZEOF			; CHECK ERROR TONE OFF
	MOV.B	#ZLCL0,R2		;
	CALIOS	#LCDCHR			; CLEAR DISPLAY
INIDP3:	BTST.B	#QIPRM1,@INTPRE		;
	BEQ	INIDP3			; BR IF INPUT PRIME LOW
	BTST.W	#QCVSW,@SWSF:8		;
	BEQ	INID_1			; BR IF COVER OPEN
	CALIOS	#DSPPON			; DISPLAY POWER ON MESSAGE
	JSR	@PBINI			; INITIALIZE PAPER BAIL
	BSR	HSEEMD			; SET HEAD SHIFT MODE BY EEPROM DATA
	JMP	@RSINI			; INITIALIZE RIBBON SHIFT
	.PAGE
;
;	SET RIBBON SHIFT TYPE
;
;	IN	NONE
;
;	OUT	 Z : 0=RIBBON TYPE CHANGE
;
SETRS:	BTST.B	#QBRBN,@OPTF:8		;
	BEQ	SETRS3			; BR IF BLACK RIBBON
	BTST.B	#QRBRBN,@OPTF:8		;
	BNE	SETRS2			; BR IF RED/BLACK RIBBON
	JMP	@SETRS1			; SET COLOUR RIBBON TYPE

;
;	INITIAIZE PRINTER
;
;	IN	NONE
;
;	OUT	NONE
;
INIPR:	JSR	@HSOPEN			; OPEN HEAD SHIFT
INIPR1:	JSR	@RSINI			; INITIALIZE RIBBON SHIFT
	JMP	@CRINI			; INITIALIZE CR

;
;	INITIALIZE AT POWER ON MODE EXIT
;
;	IN	NONE
;
;	OUT	NONE
;
INIMEX:	BSR	HSEEMD			; SET HEAD SHIFT MODE BY EEPROM DATA
	JSR	@HSOPEN			; OPEN HEAD SHIFT
;	BRA	CRHOME			; MOV CR TO HOME POSITION

;
;	MOVE CR TO HOME POSITION
;
;	IN	NONE
;
;	OUT	NONE
;
CRHOME:	BTST.B	#QDIPR,@PSWDF:8		;
	BNE	CRHO_1			; BR IF INPUTPRIME RECEIVED
	BTST.B	#QDCVR,@PSWDF:8		;
	BEQ	CRHM			; BR IF NOT COVER OPEN
CRHO_1:	RTS				;
	.PAGE
;
;	SET HEAD SHIFT MODE BY EEPROM DATA
;
;	IN	NONE
;
;	OUT	NONE
;
HSEEMD:	BTST.B	#QSERVM,@MODEF:8	;
	BNE	HSEE_1			; BR IF SERVOCE MODE
	BTST.B	#QHSMMD,@EEPBF+E2CPF2	;
	BEQ	HSEE_1			; BR IF HEAD SHIFT AUTO MODE
	LEDON	#QLMNH			; TURN ON HEAD SHIFT MANUAL MODE LED
	JMP	@HSMMD			; SET HEAD SHIFT MANUAL MODE
					;
HSEE_1:					;
	LEDOFF	#QLMNH			; TURN OFF HEAD SHIFT MANUAL MODE LED
	JMP	@HSAMD			; SET HEAD SHIFT AUTO MODE

;
;	SET HEAD SHIFT MODE
;
;	IN	NONE
;
;	OUT	NONE
;
HSMODE:					;
	LEDCHK	#QLMNH			; CHECK HEAD SHIFT MODE LED
	BNE	HSAMD			; BR IF HEAD SHIFT MANUAL LED OFF
	JMP	@HSMMD			; SET HEAD SHIFT MANUAL MODE

;
;	CHANGE HEAD SHIFT MODE
;
;	IN	NONE
;
;	OUT	NONE
;
HSMDCH:					;
	LEDNOT	#QLMNH			; EXCHANGE HEAD SHIFT MODE LED
	BEQ	HSAMD			; BR IF HEAD SHIFT MANUAL LED OFF
	JMP	@HSMMD			; SET HEAD SHIFT MANUAL MODE
	JMP	@HSMODE			; CHANGE HEAD SHIFT MODE
	.PAGE
;
;	CHECK DP3 STATUS
;
;	IN	NONE
;
;	OUT  R0-FP : NOT CHNAGE
;		 Z : 0=ACTIVE
;
CHKDP3:	BTST.B	#QSLBSY,@INTPRE		;
	BNE	CHKD_1			; BR IF SLAVE CPU BUSY
	BTST.B	#QSLACT,@INTPRE		;
	BNE	CHKD_1			; BR IF SLAVE CPU ACTIVE
	TSTTSK	#QTRDY,@DP3TCB		;
	BNE	CHKD_1			; BR IF DP3 TASK READY
	TSTPKT	@D3HPKT			;
	BNE	CHKD_1			; BR IF DP3 ACTIVE
	BTST.B	#QDP3M,@PRMDF:8		;
	BNE	CHKD_1			; BR IF DP3 MULTI BLOCK MODE
	BTST.B	#QDP3S,@PRMDF:8		;
	BNE	CHKD_2			; BR IF DP3 SUSPEND
	TSTPKT	@D3LPKT			;
CHKD_1:	RTS				;
					;
CHKD_2:	CMP.B	R0,R0			; SET Z-FLAG FOR NOT ACTIVE
	RTS				;
	.PAGE
;
;	CHECK PRINT HEAD COOLING MODE
;
;	IN	NONE
;
;	OUT	 Z : 0=HEAD COOLING MODE
;
CHKHDC:	BTST.B	#QHDALM,@ERRSF:8	;
	BEQ	CHKH_1			; BR IF NOT HEAD ALARM MODE
	JSR	@WTACTF			; WAIT SLAVE CPU ACTION END
	BTST.B	#QHDALM,@ERRSF:8	;
	BEQ	CHKH_1			; BR IF HEAD ALARM MODE
	BSET.B	#QHDCM,@PRMDF:8		;
	BNE	CHKH_2			; BR IF ALREADY HEAD COOLING MODE
	CALIOS	#DSPNOR			; DISPLAY HEAD COOLING MODE
	BSR	CRHOME			; MOVE CR TO HOME POSITION
	MOV.B	#1,R0			; RESET Z-FLAG
	RTS				;
					;
CHKH_1:	BCLR.B	#QHDCM,@PRMDF:8		;
	BEQ	CHKH_2			; BR IF ALREADY NOT HEAD COOLING MODE
	CALIOS	#DSPNOR			; DISPLAY NOT HEAD COOLING MODE
	MOV.B	#0,R0			; SET Z-FLAG
CHKH_2:	RTS				;
	.PAGE
;
;	GET DP3 PACKET DATA
;
;	IN	NONE
;
;	OUT	R1 : PACKET POINTER
;	     R2-R5 : PACKET DATA
;
GETPKT:	BTST.B	#QSERVM,@MODEF:8	;
	BNE	GETP_1			; BR IF SERVICE MODE
	BTST.B	#QSPCM,@MODEF:8		;
	BNE	GETP_1			; BR IF SPEC. CHANGE MODE
	MOV.W	#D3HTBL,R4		; IGNORE D3LPKT
	BTST.B	#QDP3S,@PRMDF:8		;
	BNE	GETP_2			; BR IF DP3 SUSPEND MODE
	BTST.B	#QHDCM,@PRMDF:8		;
	BNE	GETP_2			; BR IF HEAD COOLING MODE
GETP_1:	MOV.W	#D3PTBL,R4		; GET DP3 PACKET TABLE
GETP_2:	LDC.B	#PAGE D3PTBL,EP		;
	WAIPKT				; WAIT PACKET DATA
	CMP.W	#D3WPKT,R1		;
	BNE	GETP_3			; BR IF NOT WAKE UP PACKET
	POLPKT				; RELEASE WAKE UP PACKET
	BSR	CHKHDC			; CHECK HEAD COOLING MODE
	BRA	GETPKT			;
					;
GETP_3:	BCLR.B	#QWACTF,R2		; RESET ACTION WAIT FLAG
	BCLR.B	#QCCANE,@PRLFF:8	; DISABLE COMMAND CANCEL BY COVER OPEN
	JMP	@SETECD			; DISABLE PE CHECK

;
;	SET ERROR CHECK CONDITION
;
;	IN	NONE
;
;	OUT	NONE
;
SETECC:	BTST.B	#QSERVM,@MODEF:8	;
	BNE	SETE_1			; BR IF SERVICE MODE
	BTST.B	#QSPCM,@MODEF:8		;
	BNE	SETE_1			; BR IF SPEC. CHANGE MODE
	BSET.B	#QCCANE,@PRLFF:8	; ENABLE COMMAND CANCEL BY COVER OPEN
	BTST.B	#QPEOVM,@PRMDF:8	;
	BEQ	SETECE			; BR IF NOT PE OVERRIDE MODE
	RTS				;
					;
SETE_1:	CMP.B	#ZACF0,@PAMDF:8		;
	BCC	SETECE			; BR IF ACSF MODE
	RTS				;

;
;	GET PRINT FORMAT POINTER
;
;	IN	NONE
;
;	OUT  R0-R5 : NOT CHNAGE
;		FP : PRINT FORMAT POINTER
;
GETPFP:	MOV.B	@EEPBF+E2PFN,FP		; GET PRINT FORMAT NO.
	MULXU.B	#E2PFSZ,FP		; CALCULATE PRINT FORMAT POINTER
	ADD.W	#EEPBF+E2PFTB-E2PFSZ,FP	;
	RTS				;

;
;	CHECK PAPER MODE
;
;	IN	R3 : PAPER MODE
;
;	OUT	R0 : OPTION ATTACHEMNT STATUS
;	     R1-FP : NOT CHANGE
;		 Z : 0=VALID PAPER MODE
;
CHKPMD:	EXTU	R3			;
	MOV.B	@OPTF:8,R0		; GET ACSF SW STATUS
	AND.B	#XMNSW+XACSW+XSELA,R0	;
	BTST.B	#QACSW,R0		;
	BEQ	CHKP_1			; BR IF ACSF ATTACHED
	MOV.B	#2*16,R0		;
	BTST.B	#QBPES,@SNSF:8		;
	BEQ	CHKP_1			; BR IF BOTTOM PE
	MOV.B	#3*16,R0		;
CHKP_1:	SHLR.B	R0			; CALCULATE BIT NO.
	SHLR.B	R0			;
	SHLR.B	R0			;
	SHLR.B	R0			;
	BTST.B	R0,@(PAMDTB,R3)		; CHECK PAPER MODE
	RTS				;
	.PAGE
;
;	SET PAPER MODE
;
;	IN	R3 : PAPER MODE
;
;	OUT	R3 : PAPER MODE
;
SELPMD:	BTST.B	#QFPES,@SNSF:8		;
	BEQ	SELP_1			; BR IF FORMS PE
	CMP.B	#ZFORMP,R3		;
	BEQ	SELP_1			; BR IF FORMS PAPER HOTCHKISS MODE
	MOV.B	#ZFORM,R3		;
SELP_1:	BSR	CHKPMD			; CHECK PAPER MODE
	BNE	SETPMD			; BR IF VALID PAPER MODE
	MOV.B	#ZACF0,R3		; SET ACSF0 MODE
	TST.B	R0			;
	BEQ	SETPMD			; BR IF SF-260 AUTO MODE
	MOV.B	#ZBTM,R3		;
	CMP.B	#3,R0			;
	BEQ	SETPMD			; BR IF NOT BOTTOM PE
	MOV.B	#ZFORM,R3		;
SETPMD:	JSR	@RETPM2			; RESET PAPER MODE GROUP 2 FLAG
	MOV.B	R3,@PAMDF:8		; SET POWER ON PAPER MODE
	CMP.B	#ZSHT,R3		;
	BCC	SETP_2			; BR IF SHEET/ACSF MODE
	CMP.B	#ZBTM,R3		;
	BCC	SETP_1			; BR IF BOTTOM MODE
	JSR	@SETPMF			; SET FORMS MODE
	BSR	SETP_5			; SET PAPER MODE GROUP 2 MODE
	CMP.B	#ZFORMP,R3		;
	BEQ	SETPHM			; BR IF PAPER HOTCHKISS MODE
	RTS				;
					;
SETP_1:	JSR	@SETPMB			; SET BOTTOM MODE
	CMP.B	#ZBTMP,R3		;
	BEQ	SETPHM			; BR IF PAPER HOTCHKISS MODE
	RTS				;
					;
SETP_2:	BEQ	SETP_4			; BR IF SHEET
	JSR	@SETPMA			; SET ACSF MODE
	CMP.B	#ZACF0,R3		;
	BEQ	SETP_3			; BR IF ACSF FOR SF-260
	CMP.B	#ZACF3,R3		;
	BEQ	SETP_3			; BR IF ACSF FOR 3 BIN
	BSR	SETP_5			; SET PAPER MODE GROUP 2 MODE
SETP_3:	BTST.B	#QHSAIN,@EEPBF+E2CPF2	;
	BEQ	HSOPSS			; BR IF HEAD SHIFT AT PAPER MODE CHANGE
	RTS				;

SETP_4:	JSR	@SETPMS			; SET SHEET MODE
	MOV.B	@OPTF:8,R0		;
	AND.B	#XMNSW+XACSW+XSELA,R0	; GET OPTION ATTACHMENT STATUS
	CMP.B	#XSELA,R0		;
	BEQ	SETP_6			; BR IF 3 BIN ACSF MANUAL MODE
SETP_5:	JSR	@SETPM2			; SET PAPER MODE GROUP 2 MODE
SETP_6:	RTS
	.PAGE
;
;	INSERT PAPER
;
;	IN	R2 : TOP MARGIN
;		R3 : PAPER MODE
;
;	OUT	 Z : 0=INSERT ERROR
;
INSERT:	MOV.W	R3,R0			; GET PAPER MODE
	CMP.B	#ZSHT,R0		;
	BNE	INSE_1			; BR IF NOT SHEET MODE
	MOV.B	@OPTF:8,R3		;
	AND.B	#XMNSW+XACSW+XSELA,R3	; GET OPTION ATTACHMENT STATUS
	CMP.B	#XSELA,R3		;
	BNE	INSE_1			; BR IF NOT 3 BIN ACSF ATTACHED
	MOV.B	#ZACF4,R0		; SET ACSF 3RD BIN MANUAL MODE
INSE_1:	MOV.W	R2,R3			; SET TOP MARGIN
	MULXU.B	#3,R0			;
	JSR	@(INSE_9:16,R0)		; INSERT PAPER
	BTST.B	#QJAMI,@ERRSF:8		; CHECK INSERT STATUS
INSE_2:	RTS				;
					;
INSE_9:	JMP	@INSFRM			; 0  FORMS
	JMP	@INSFRM			; 1  FORMS   (PAPER HOTCHKISS MODE)
	RTS3				; 2  BOTTOM
	RTS3				; 3  BOTTOM  (PAPER HOTCHKISS MODE)
	JMP	@INSSHT			; 4  SHEET   (NOT MULTI BIN ACSF)
	JMP	@INS260			; 5  SF-260
	JMP	@INSAF1			; 6  ASCF 1ST BIN
	JMP	@INSAF2			; 7  ASCF 2ND BIN
	JMP	@INSAF3			; 8  ASCF 3RD BIN (AUTO)
	JMP	@INSAF4			; 9  ASCF 3RD BIN (MANUAL)
	.PAGE
;
;	CHECK EJECT DONE
;
;	IN	NONE
;
;	OUT	R3 : PAPER MODE
;		 Z : 1=EJECT DONE
;
CHKEJC:	JSR	@WTACTF			; WAIT SLAVE CPU ACTION END
	MOV.B	@PAMDF:8,R3		; GET PAPER MODE
	CMP.B	#ZBTM,R3		;
	BCS	CHKE_1			; BR IF FORMS MODE
	CMP.B	#ZSHT,R3		;
	BCS	CHKE_2			; BR IF BOTTOM MODE
	BTST.B	#QSPES,@SNSF:8		; 8  ASCF 3RD BIN
	BEQ	GETEJS			; BR IF SENSOR PE
	RTS				;
					;
CHKE_1:	BTST.B	#QFPES,@SNSF:8		;
	BEQ	GETEJF			; BR IF SENSOR PE
	RTS				;
					;
CHKE_2:	BTST.B	#QBPES,@SNSF:8		;
	BEQ	GETEJB			; BR IF SENSOR PE
	RTS				;

;
;	EJECT PAPER
;
;	IN	R1 : PACKET POINTER
;		R3 : PAPER MODE
;
;	OUT	 Z : 0=EJECT ERROR
;
EJECT:	MULXU.B	#3,R3			;
	JSR	@(EJEC_9:16,R3)		; INSERT PAPER
	BTST.B	#QJAME,@ERRSF:8		; CHECK EJECT STATUS
	RTS				;
					;
EJEC_1:	CLR.B	R2			;
	TST.W	R1			;
	BEQ	EJEC_2			; BR IF NOT PACKET DATA
	MOV.B	#ZESCFS,R2		;
	CMP.W	#D3HPKT,R1		;
	BEQ	EJEC_2			; BR IF EJECT BY SW
	MOV.B	#ZESCFU,R2		;
EJEC_2:	JMP	@EJCFRM			; EJECT FORMS
					;
EJEC_9:	BRA	EJEC_1:16		; 0  FORMS
	BRA	EJEC_1:16		; 1  FORMS   (PAPER HOTCHKISS MODE)
	JMP	@EJCBTM			; 2  BOTTOM
	JMP	@EJCBTM			; 3  BOTTOM  (PAPER HOTCHKISS MODE)
	JMP	@EJCSHT			; 4  SHEET   (NOT MULTI BIN ACSF)
	JMP	@EJCSHT			; 5  SF-260
	JMP	@EJCSHT			; 6  ASCF 1ST BIN
	JMP	@EJCSHT			; 7  ASCF 2ND BIN
	JMP	@EJCSHT			; 8  ASCF 3RD BIN
	.PAGE
;
;	CHECK LF CONDITION
;
;	IN	R2 : FEED COUNT FOR CHECK
;
;	OUT  R2-R3 : NOT CHNAGE
;		 Z : 0=PULL OUT
;
CHKLF:	BTST.B	#QLFACT,@PRLFF:8	;
	BNE	CHKL_4			; BR IF LF ACTIVE
	MOV.B	@PAMDF:8,R0		;
	CMP.B	#ZSHT,R0		;
	BCS	CHKL_4			; BR IF FORMS or BOTTOM MODE
	BTST.B	#QSPES,@SNSF:8		;
	BNE	CHKL_4			; BR IF NOT SENSOR PE
	MOV.W	@SOPC:8,R0		;
	BNE	CHKL_4			; BR IF ALREADY SENSOR PE
	BCLR.B	#QCCANE,@PRLFF:8	; DISABLE COMMAND CANCEL BY COVER OPEN
	JSR	@CHKCAN			; RESET COMMAND CANCEL
	JSR	@LFRW			; FEED REVERSE
	MOV.W	R2,@-SP			;
	MOV.W	#50/ZTI,R2		;
	WAITSK				; DELAY 0.5mS
	MOV.W	@SP+,R2			;
	CALIOS	#SCISTS			; GET PE SENSOR STATUS 1/2
	BTST.B	#QSPES,@SNSF:8		;
	BNE	CHKL_3			; BR IF NOT PULL OUT SHEET
CHKL_1:	MOV.B	#1,R0			; RESET Z-FLAG FOR PULL OUT
	RTS				;
					;
CHKL_3:	JSR	@LFFW			; FEED FORWARD
CHKL_4:	MOV.B	#0,R0			; SET Z-FLAG FOR NOT PULL OUT
	RTS				;
					;
	.PAGE
;
;	FEED FORWARD/REVERSE
;
;	IN   R2-R3 : FEED COUNT < H'1FFFF
;
;	OUT  R2-R3 : NOT CHANGE
;		 Z : 0=FEED CANCEL
;
FEEDF:	TST.B	R2			;
	BNE	FEED_1			; BR IF FEED COUNT > 65535
FEEDF1:	MOV.W	R3,R2			;
	JSR	@LFFWD			; FEED FORWARD
	BNE	FEED_2			;
	MOV.B	#0,R2			;
	RTS				;
					;
FEED_1:	MOV.W	#ZNN,R2			;
	JSR	@LFFWD			; FEED FORWARD
	BNE	FEED_2			; BR IF NOT FEED CANCEL
	MOV.W	R3,R2			;
	ADD.W	#1,R2			; CALCULAET 2ND FEED COUNT
	JSR	@LFFWD			; FEED FORWARD
	MOV.B	#1,R2			;
	MOV.B	#0,R0			; SET Z-FLAG FOR NOT CANCEL
FEED_2:	RTS				;

FEEDR:	TST.B	R2			;
	BNE	FEED_5			; BR IF FEED COUNT > 65535
FEEDR1:	MOV.W	R3,R2			;
	JSR	@LFRVS			; FEED REVERSE
	BNE	FEED_6			;
	MOV.B	#0,R2			;
	RTS				;
					;
FEED_5:	MOV.W	#ZNN,R2			;
	JSR	@LFRVS0			; FEED REVERSE
	BNE	FEED_6			; BR IF NOT FEED CANCEL
	MOV.W	R3,R2			;
	ADD.W	#1,R2			; CALCULAET 2ND FEED COUNT
	JSR	@LFRVS			; FEED REVERSE
	MOV.B	#1,R2			;
	MOV.B	#0,R0			; SET Z-FLAG FOR NOT CANCEL
FEED_6:	RTS				;
	.PAGE
;
;	FEED
;
;	IN	R2 : NEGATIVE FEED COUNT
;
;	OUT	NONE
;
FEEDN:	TST.W	R2			;
	BPL	LFRVS			; BR IF REVERSE FEED
	NEG.W	R2			;
	JMP	@LFFWD			; RETURN TO TOF POSITION

;
;	CUT POSTION FEED
;
;	IN	R1 : TOP MARGIN
;	     R2-R3 : FEED COUNT
;
;	OUT	R5 : CUT POSITION
;		 Z : 0=FEED CANCEL
;
CUTPF:	BSR	CUTPF1			; GET CUT POSITION
	SUB.W	R1,R5			; CALCULATE CUT POSITION FEED COUNT
	SUBX.B	R4,R4			;
	ADD.W	R5,R3			; ADD CUT POSITION FEED COUNT
	ADDX.B	R4,R2			;
	BMI	CUTP_3			;
	BSR	FEEDF			; FEED TO CUT POSITION
	BNE	CUTP_4			; BR IF FEED CANCEL
CUTPF1:	MOV.W	@EEPBF+E2CUT,R5		; GET CUT POSTION
	MOV.B	@OPTF:8,R0		; GET ACSF SW STATUS
	AND.B	#XACSW+XSELA,R0		;
	CMP.B	#XSELA,R0		;
	BNE	CUTP_5			; BR IF NOT MULTI BIN ACSF ATTACHED
	ADD.W	#ZFF7IA,R5		; ADJUST FORMS CUT POSITION
CUTP_2:	MOV.B	#0,R0			; SET Z-FLAG FOR NOT CANCEL
	RTS

CUTP_5:	BTST.B	#QACSW,R0		;
	BNE	CUTP_2			; BR. IF NOT ACSF ATTACHED
	BTST.B	#QCP261,@EEPBF+E2CPF1	;
	BEQ	CUTP_2			; BR IF NOT CUT POSITION FEED FOR 7 INCH
	ADD.W	#ZFF7IS,R5		; ADJUST FORMS CUT POSITION
	BRA	CUTP_2
					;
CUTP_3:	NOT.W	R3			;
	NOT.B	R2			;
	ADD.W	#1,R3			; MAKE 2'S COMPLEMENT
	ADDX.B	#0,R2			;
	BSR	FEEDR			; FEED TO CUT POSITION
	BEQ	CUTPF1			; BR IF NOT CANCEL
CUTP_4:	RTS				;
	.PAGE
;
;	PRINT OUT BUFFER
;
;	IN	FP : PRINT FORMAT POINTER
;
;	OUT	FP : NOT CHANGE
;
PRT_1:	MOV.W	#D3WPKT,R1		;
	RCVPKT				; WAIT HEAD COOLING END
PRT:	BSR	CHKHDC			; CHECK HEAD COOLING MODE
	BNE	PRT_1			; BR IF HEAD COOLING MODE
	BSR	PRT_3			; ADJUST HEAD SHIFT FOR PRINT
	BTST.B	#QNOPHO,@EEPBF+E2CPF1	;
	BEQ	PRT_2			; BR IF NO PAPER BAIL HALF OPEN
	JSR	@PRCHK			; CHECK PRINT CONDITION
PRT_2:	JSR	@SETPRT			; SET UP PRINT COMMAND
	BTST.B	#QBRBN,@OPTF:8		;
	BEQ	PRT13			; BR IF BLACK RIBBON
	BTST.B	#QRBRBN,@OPTF:8		;
	BNE	PRT12			; BR IF RED/BLACK RIBBON
	JMP	@PRT11			; PRINT COLOUR
	;
PRT_3:	BTST.B	#QHSFIX,@EEPBF+E2CPF2	;
	BEQ	HSAUTO			; BR IF NOT HEAD SHIFT FIX MODE
	JMP	@HSFIX			; HEAD SHIFT FIX ADJUST
					;
;
;	SET TOP SENSOR A/D VALUE
;
;	IN	R3 : A/D VALUE
;
;	OUT	NONE
;
SETADV:	MOV.B	R3,R2			;
	CALIOS	#SCIADV			; SET TOP SENSOR THRESHOLD
	RTS				;

;
;	SET LCD CONTRAST
;
;	IN	R3 : LCD CONTRAST
;
;	OUT	NONE
;
SETLCD:					;
	CALIOS	#LCDCON			; SET LCD CONTRAST
	RTS				;
	.END
