	.PROGRAM	aplbcd
	.HEADING	"M4324 AX LOAD BAR CODE & OCR-B MODULE"
	.LIST		NOEXP,NOCOND
;********************************************************
;							*
;	M4324 AX BAR CODE SEQUENCE MODULE		*
;							*
;	FILE NAME	AX_BCD.MAR			*
;	CREATED 	07/MAY/1991			*
;							*
;********************************************************
;
	.EXPORT 	BARCD
	.EXPORT 	BJ13LD,BJ08LD,BCDBLD,BC39LD
	.EXPORT 	OJ13LD,OJ08LD,OCDBLD,OC39LD
;
	.IMPORT 	GETC,  INBFC, STPRNT,GETIBP
	.IMPORT 	SETSPD,SELKCG,UPCLMX
	.IMPORT 	BCDFTB,JN13TB,JN08L, JN08R
	.IMPORT 	JN13R, CDBTB, CD39TB,BCDCTB
	.IMPORT 	OCRTB, OCRTB1,STLSM, SETPEL
;
	.INCLUDE	"AX_BUF.H"
	.INCLUDE	"AX_DP2.H"
	.INCLUDE	"AX_TBF.H"
	.INCLUDE	"COMMON.H"
;
;	<< BAR-CODE CONSTANT >>
;
ZBCDSZ: .EQU	  4			; BAR-CODE COMMON SIZE
	.PAGE
	.SECTION	APL2,CODE,ALIGN=16
;
;	ESC + | + n (n = A->D,H)
;
;	BAR CODE START
;
;	IN	R0 : INPUT DATA (= "A"->"D","H")
;
BARCD:	CMP.B	#"A",R0                 ;
	BEQ	JAN13:16		; BR. IF JAN-13
	CMP.B	#"B",R0                 ;
	BEQ	JAN08:16		; BR. IF JAN-08
	CMP.B	#"C",R0                 ;
	BEQ	CDBAR:16		; BR. IF CODER-BAR
	CMP.B	#"D",R0                 ;
	BEQ	COD39:16		; BR. IF CODE-39
	CMP.B	#"H",R0                 ;
	BNE	BARV_2			; BR. IF ERROR CODE
;
;	ESC + | + H + n
;
;	SET BAR CODE VERTICAL HEIGHT SIZE
;
BVHGT:	JSR	@GETC			; GET DATA (n)
	AND.B	#H'0F,R0                ; MASK HIGH NIBLLE
	BEQ	BARV_2			; BR. IF ZERO
	MOV.B	R0,@BCDHTS:8		; SET VERTICAL SIZE
BARV_2: RTS
	.PAGE
;
;	ESC + | + A + d1 + ... + d13
;
;	JAN-13 MODE
;
JAN13:	MOV.W	#16,R0			; SET TEXT BUFFER SIZE
	MOV.W	R0,@-SP 		;+ SAVE DATA SIZE
	BSR	SVTBF:16		; CHECK TEXT BUFFER OVER
	MOV.W	@SP+,R0 		;+ UNSAVE DATA SIZE
	LDC.B	#PAGE JN13R,EP		; SET TABLE PAGE
	MOV.W	#JN13R,R5		; SET DUMMY TABLE POINTER
	MOV.B	#0,R4			; RESET NUMBER OF RECEIVE DATA COUNTER
	MOV.B	R4,@KJCDS2:8		; RESET DATA COUNTER
	BTST.B	#QBBFFL,@APL0F:8	;
	BNE	JN13_C:16		; BR. IF BAR-CODE BUFFER FULL
	MOV.B	#1,R4			; SET NUMBER OF RECEIVE DATA COUNTER
	MOV.B	#ZJ13FM,R2		; SET JAN-13 FORMAT FLAG
	BSR	SETBCD:16		; SET COMMOM FORMAT MODE
	JSR	@GETC			; GET FLAG CHARACTER
JN13_2: SUBS.B	#H'30,R0                ;
	CMP.B	#H'0A,R0                ;
	BCC	JN13_8:16		; BR. IF ERROR DATA
	MOV.B	R0,@EDWKS1:8		; SAVE FLAG CHARACTER
	ADDS.B	#H'61,R0                ; SET FLAG CHARACTER CODE & BAR SPACE CODE
	MOV.W	#24*ZCL180,R2		; SET SPACE COLUMN LENGTH
	BSR	CLUPW:16		; CHECK RIGHT MARGIN OVER & UPDATE COLUMN COUNTER
	BNE	JAN13P:16		; BR. IF RIGHT MARGIN OVER
	ADD.B	#1,@KJCDS2:8		; UPDATE DATA COUNTER
	MOV.B	#H'1E,R0                ; SET LEFT-GUARD-BAR CODE
	MOV.W	#8*ZCL180,R2		; SET LEFT-GUARD-BAR COLUMN LENGTH
	BSR	CLUPW:16		; CHECK RIGHT MARGIN OVER & UPDATE COLUMN COUNTER
	BNE	JAN13P:16		; BR. IF RIGHT MARGIN OVER
	ADD.B	#1,@KJCDS2:8		; UPDATE DATA COUNTER
JN13_4: MOV.B	R4,@EDWKS2:8		; SAVE IT
	MOV.B	@EDWKS1:8,R5		; GET FLAG CHARACTER
	EXTU	R5			;
	SHLL.B	R5			; FLAG CHARACTER x 8
	SHLL.B	R5			;
	SHLL.B	R5			;
	ADDS.B	@EDWKS2:8,R5		;
	SHLL.B	R5			; GET TABLE OFFSET
	LDC.B	#PAGE JN13TB,EP 	; SET BASE TABLE PAGE
	ADD.W	#JN13TB,R5		; SET TABLE BASE POINTER
	MOV.W	@R5,R5			; GET LEFT CHARACTER TABLE POINTER
	ADD.B	#1,R4			; UPDATE COUNTER
	JSR	@GETC			; GET BAR-CODE CHARACTER
	TST.B	R0			;
	BMI	JN13_8			; BR. IF ERROR DATA
	MOV.B	R0,R5			; SET CODE OFFSET
	MOV.B	@R5,R0			; GET INNER CODE
	CMP.B	#H'FF,R0                ;
	BEQ	JN13_8			; BR. IF ERROR DATA
	MOV.W	#21*ZCL180,R2		; SET LEFT SIDE CHARACTER COLUMN LENGTH
	BSR	CLUPW:16		; CHECK RIGHT MARGIN & UPDATE COLUMN COUNTER
	BNE	JAN13P			; BR. IF RIGHT MARGIN OVER
	ADD.B	#1,@KJCDS2:8		; UPDATE DATA COUNTER
	CMP.B	#7,R4			;
	BCS	JN13_4			; BR. IF NOT LEFT SIDE CHARACTER END
	MOV.B	#" ",R0                 ; SET CENTER-BAR CODE
	MOV.W	#16*ZCL180,R2		; SET CENTER-BAR COLUMN LENGTH
	BSR	CLUPW:16		; CHECK RIGHT MARGIN & UPDATE COLUMN COUNTER
	BNE	JAN13P			; BR. IF RIGHT MARGIN OVER
	ADD.B	#1,@KJCDS2:8		; UPDATE DATA COUNTER
	MOV.W	#JN13R,R5		; SET RIGHT MARGIN CHARACTER TABLE POINTER
JN13_6: ADD.B	#1,R4			; UPDATE COUNTER
	JSR	@GETC			; GET BAR-CODE CHARACTER
	TST.B	R0			;
	BMI	JN13_8			; BR. IF ERROR DATA
	MOV.B	R0,R5			; SET CODE OFFSET
	MOV.B	@R5,R0			; GET INNER CODE
	CMP.B	#H'FF,R0                ;
	BEQ	JN13_8			; BR. IF ERROR DATA
	MOV.W	#21*ZCL180,R2		; SET LEFT SIDE CHARACTER COLUMN LENGTH
	BSR	CLUPW:16		; CHECK RIGHT MARGIN & UPDATE COLUMN COUNTER
	BNE	JAN13P			; BR. IF RIGHT MARGIN OVER
	ADD.B	#1,@KJCDS2:8		; UPDATE DATA COUNTER
	CMP.B	#13,R4			;
	BCS	JN13_6			; BR. IF NOT LEFT SIDE CHARACTER END
	MOV.B	#H'1F,R0                ; SET RIGHT-GUARD-BAR CODE
	MOV.W	#8*ZCL180,R2		; SET RIGHT-GUARD-BAR COLUMN LENGTH
	BSR	CLUPW:16		; CHECK RIGHT MARGIN & UPDATE COLUMN COUNTER
	BNE	JAN13P			; BR. IF RIGHT MARGIN OVER
	ADD.B	#1,@KJCDS2:8		; UPDATE DATA COUNTER
	BRA	EXIT_2			; NORMAL EXIT
;
;	<< ERROR DATA >>
;
JN13_8: CMP.B	#13,R4			;
	BCC	JN13_A			; BR. IF IGNORE DATA END
	ADD.B	#1,R4			; UPDATE COUNTER
	JSR	@GETC			; GET IGNORE DATA
	BRA	JN13_8
;
;	<< ERROR DATA END >>
;
JN08_A:
JN13_A: MOV.W	@EDWKS3:8,R0		; GET TEXT BUFFER START POINTER
	MOV.W	R0,@TXTBFP:8		; RESTORE TEXT BUFFER POINTER
	MOV.W	@EDWKS5:8,R0		; GET START COLUMN COUNTER
	MOV.W	R0,@CLMCTC:8		; RESTORE START COLUMN COUNTER
	BCLR.B	#QBSEQR,@APL2F:8	; RESET BAR-CODE SEQUENCE RECIVE FLAG
	RTS
	.PAGE
;
;	<< RIGHT MARGIN OVER >>
;
JAN13P:
JN13_C: CMP.B	#13,R4			;
	BCC	JN13_E			; BR. IF ALL NO ERROR DATA
	ADD.B	#1,R4			; UPDATE COUNTER
	JSR	@GETC			; GET BAR-CODE CHARACTER DATA
	TST.B	R0			;
	BMI	JN13_8			; BR. IF ERROR DATA
	MOV.B	R0,R5			; SET CODE OFFSET
	MOV.B	@R5,R0			; GET INNER CODE
	CMP.B	#H'FF,R0                ;
	BEQ	JN13_8			; BR. IF ERROR DATA
	BRA	JN13_C
;
;	<< BUFFER FULL >>
;
CDBR_E:
JN08_E:
JN13_E: BSET.B	#QBBFFL,@APL0F:8	; SET BAR-CODE BUFFER FULL FLAG
;
;	<< NORMAL END >>
;
;	IN	@KJCDS2:8 = INTO TEXT BUFFER DATA SIZE
;
EXIT_2: BSET.B	#QBCDPR,@PRPTCF:8	; SET BAR-CODE 1 LINE PROCESS FLAG
	BCLR.B	#QBSEQR,@APL2F:8	; RESET BAR-CODE SEQUENCE RECIVE FLAG
	BTST.B	#0,@KJCDS2:8		;
	BEQ	EXIT_4			; BR. IF DATA COUNTER = EVEN
	BSR	ADDAT:16		; ADJUST DATA MOVE
	ADD.B	#1,@KJCDS2:8		;
EXIT_4: MOV.W	@EDWKS3:8,R0		; GET TEXT BUFFER START POINTER
	MOV.B	@KJCDS2:8,R2		; GET ADJUST DATA COUNTER
	BEQ	EXIT_6			; BR. IF NO DATA
	MOV.B	R2,@(YBSPDF,R0) 	; SET DATA COUNTER
	EXTU	R2			;
	ADD.W	R2,R0			; UPDATE TEXT BUFFER POINTER
	ADDS.B	#ZBCDSZ,R0		; UPDATE BAR-CODE SIZE (COMMON)
EXIT_6: MOV.W	R0,@TXTBFP:8		; UPDATE TEXT BUFFER POINTER
	JSR	@UPCLMX 		; UPDATE COLUMN MAX COUNTER
	RTS
	.PAGE
;
;	ESC + | + B + d1 + ... + d8
;
;	JAN-08 MODE
;
JAN08:	MOV.W	#12,R0			; SET TEXT BUFFER SIZE
	MOV.W	R0,@-SP 		;+ SAVE DATA SIZE
	BSR	SVTBF:16		; CHECK TEXT BUFFER OVER
	MOV.W	@SP+,R0 		;+ UNSAVE DATA SIZE
	LDC.B	#PAGE JN08L,EP		; SET LEFT CHARACTER PAGE
	MOV.W	#JN08L,R5		; SET LEFT CHARACTER TABLE POINTER
	CLR.B	R4			; SET NUMBER OF RECEIVE DATA COUNTER
	CLR.B	@KJCDS2:8		; RESET DATA COUNTER
	BTST.B	#QBBFFL,@APL0F:8	;
	BNE	JN08_C			; BR. IF BAR-CODE BUFFER FULL
	MOV.B	#ZJ08FM,R2		; SET JAN-08 FORMAT FLAG
	BSR	SETBCD:16		; SET COMMOM FORMAT MODE
	CLR.B	R4			; SET NUMBER OF RECEIVE DATA COUNTER
	MOV.B	#H'1E,R0                ; SET LEFT-GUARD-BAR CODE
	MOV.W	#8*ZCL180,R2		; SET LEFT-GUARD-BAR COLUMN LENGTH
	BSR	CLUPW:16		; CHECK RIGHT MARGIN OVER & UPDATE COLUMN COUNTER
	BNE	JAN08P			; BR. IF RIGHT MARGIN OVER
	ADD.B	#1,@KJCDS2:8		; UPDATE DATA COUNTER
JN08_2: CMP.B	#8,R4			;
	BCC	JN08_6			; BR. IF ALL CHARACTER SAVE END
	CMP.B	#4,R4			;
	BNE	JN08_4			; BR. IF NOT FIRST DATA END
	MOV.W	#JN08R,R5		; SET RIGHT CHARACTER TABLE POINTER
	MOV.B	#" ",R0                 ; SET CENTER-BAR CODE
	MOV.W	#16*ZCL180,R2		; SET CENTER-BAR CODE COLUMN LENGTH
	BSR	CLUPW:16		; CHECK RIGHT MARGIN OVER & UPDATE COLUMN COUNTER
	BNE	JAN08P			; BR. IF RIGHT MARGIN OVER
	ADD.B	#1,@KJCDS2:8		; UPDATE DATA COUNTER
JN08_4: ADD.B	#1,R4			; UPDATE COUNTER
	JSR	@GETC			; GET BAR-CODE CHARACTER
	TST.B	R0			;
	BMI	JN08_8			; BR. IF ERROR DATA
	MOV.B	R0,R5			; SET CODE OFFSET
	MOV.B	@R5,R0			; GET INNER CODE
	CMP.B	#H'FF,R0                ;
	BEQ	JN08_8			; BR. IF ERROR DATA
	MOV.W	#21*ZCL180,R2		; SET CHARACTER COLUMN LENGTH
	BSR	CLUPW:16		; CHECK RIGHT MARGIN OVER & UPDATE COLUMN COUNTER
	BNE	JAN08P			; BR. IF RIGHT MARGIN OVER
	ADD.B	#1,@KJCDS2:8		; UPDATE DATA COUNTER
	BRA	JN08_2
	;
JN08_6: MOV.B	#H'1F,R0                ; SET RIGHT-GUARD-BAR CODE
	MOV.W	#8*ZCL180,R2		; SET RIGHT-GUARD-BAR COLUMN LENGTH
	BSR	CLUPW:16		; CHECK RIGHT MARGIN OVER & UPDATE COLUMN COUNTER
	BNE	JAN08P			; BR. IF RIGHT MARGIN OVER
	ADD.B	#1,@KJCDS2:8		; UPDATE DATA COUNTER
	BRA	EXIT_2			; NORMAL EXIT
;
;	<< ERROR DATA >>
;
JN08_8: CMP.B	#8,R4			;
	BCC	JN08_A			; BR. IF IGNORE DATA END
	ADD.B	#1,R4			; UPDATE COUNTER
	JSR	@GETC			; GET BAR-CODE CHARACTER
	BRA	JN08_8
	.PAGE
;
;	<< RIGHT MARGIN OVER >>
;
JAN08P:
JN08_C: CMP.B	#8,R4			;
	BCC	JN08_E			; BR. IF ALL NO ERROR DATA
	ADD.B	#1,R4			; UPDATE COUNTER
	JSR	@GETC			; GET BAR-CODE CHARACTER
	TST.B	R0			;
	BMI	JN08_8			; BR. IF ERROR DATA
	MOV.B	R0,R5			; SET CODE OFFSET
	MOV.B	@R5,R0			; GET INNER CODE
	CMP.B	#H'FF,R0                ;
	BEQ	JN08_8			; BR. IF ERROR DATA
	BRA	JN08_C
	.PAGE
;
;	ESC + | + C + d1 + ... + dn
;
;	CODE-BAR MODE
;
CDBAR:	BSR	CHKBN:16		; GET NUMBER OF DATA & CHECK TEXT BUFFER OVER
	BEQ	CDBR_G			; BR. IF NO PARAMETER
	CLR.B	@KJCDS2:8		; RESET DATA COUNTER
	LDC.B	#PAGE CDBTB,EP		; SET CODER-BAR TABLE PAGE
	MOV.W	#CDBTB,R5		; SET CODER-BAR TABLE POINTER
	BTST.B	#QBBFFL,@APL0F:8	;
	BNE	CDBR_C			; BR. IF BAR-CODE BUFFER FULL
	MOV.B	#ZCDBFM,R2		; SET CODER-BAR FORMAT FLAG
	BSR	SETBCD:16		; SET COMMOM FORMAT MODE
CDBR_2: ADD.B	#-1,R4			; UPDATE COUNTER
	JSR	@GETC			; GET BAR-CODE CHARACTER
	TST.B	R0			;
	BMI	CDBR_8			; BR. IF ERROR DATA
	MOV.B	R0,R5			; SET CODE OFFSET
	MOV.B	@R5,R0			; GET INNER CODE
	CMP.B	#H'FF,R0                ;
	BEQ	CDBR_8			; BR. IF ERROR DATA
	MOV.W	#27*ZCL180,R2		; SET BAR-CODE CAHARCTER FOR 27 COLUMN LENGTH
	CMP.B	#H'2D,R0                ;
	BCS	CDBR_4			; BR. IF INNER CODE = 27 COLUMN LENGTH
	MOV.W	#31*ZCL180,R2		; SET BAR-CODE CHARACTER FOR 31 COLUMN LENGTH
CDBR_4: MOV.W	#18*ZCL180,R3		; SET OCR-B CHARACTER COLUMN LENGTH
	BSR	CLMUP:16		; CHECK RIGHT MARGIN OVER & UPDATE COLUMN COUNTER
	BNE	CDBARP			; BR. IF RIGHT MARGIN OVER
	ADD.B	#1,@KJCDS2:8		; UPDATE DATA COUNTER
	BSR	SCLUP:16		; UPDATE OCR-B COLUMN COUNTER
	TST.B	R4			;
	BNE	CDBR_2			; BR. IF NOT RECEIVE DATA END
	BSR	SCLCA:16		; ADJUST OCR-B COLUMN LENGTH
	BRA	EXIT_2
;
;	<< ERROR DATA >>
;
CDBR_8: TST.B	R4			;
	BEQ	CDBR_A			; BR. IF IGNORE DATA END
	ADD.B	#-1,R4			; UPDATE COUNTER
	JSR	@GETC			; GET IGNORE BAR-CODE CHARACTER
	BRA	CDBR_8
;
;	<< ERROR DATA END >>
;
CDBR_A: MOV.W	@EDWKS3:8,R0		; GET TEXT BUFFER START POINTER
	MOV.W	R0,@TXTBFP:8		; RESTORE TEXT BUFFER POINTER
	MOV.W	@EDWKS5:8,R0		; GET START COLUMN COUNTER
	MOV.W	R0,@CLMCTC:8		; RESTORE START COLUMN COUNTER
CDBR_G: BCLR.B	#QBSEQR,@APL2F:8	; RESET BAR-CODE SEQUENCE RECIVE FLAG
	RTS
	.PAGE
;
;	<< RIGHT MARGIN OVER >>
;
CDBARP:
CDBR_C: TST.B	R4			;
	BEQ	CDBR_E			; BR. IF ALL NO ERROR DATA
	ADD.B	#-1,R4			; UPDATE COUNTER
	JSR	@GETC			; GET BAR-CODE CHARACTER
	TST.B	R0			;
	BMI	CDBR_8			; BR. IF ERROR DATA
	MOV.B	R0,R5			; SET CODE OFFSET
	MOV.B	@R5,R0			; GET INNER CODE
	CMP.B	#H'FF,R0                ;
	BEQ	CDBR_8			; BR. IF ERROR DATA
	BRA	CDBR_C
	.PAGE
;
;	ESC + | + D + d1 + ... + dn
;
;	CODE-39 MODE
;
COD39:	BSR	CHKBN:16		; GET NUMBER OF DATA & CHECK TEXT BUFFER OVER
	BEQ	CDBR_G			; BR. IF NO PARAMETER
	CLR.B	@KJCDS2:8		; RESET DATA COUNTER
	LDC.B	#PAGE CD39TB,EP 	; SET CODE-39 TABLE PAGE
	MOV.W	#CD39TB,R5		; SET CODE-39 TABLE POINTER
	BTST.B	#QBBFFL,@APL0F:8	;
	BNE	CDBARP			; BR. IF BAR-CODE BUFFER FULL
	MOV.B	#ZC39FM,R2		; SET CODE-39 FORMAT FLAG
	BSR	SETBCD:16		; SET COMMOM FORMAT MODE
CD39_2: ADD.B	#-1,R4			; UPDATE COUNTER
	JSR	@GETC			; GET BAR-CODE CHARACTER
	TST.B	R0			;
	BMI	CDBR_8			; BR. IF ERROR DATA
	MOV.B	R0,R5			; SET CODE OFFSET
	MOV.B	@R5,R0			; GET INNER CODE
	CMP.B	#H'FF,R0                ;
	BEQ	CDBR_8			; BR. IF ERROR DATA
;921210 MOV.W	#32*ZCL180,R2		; SET BAR-CODE CHARACTER COLUMN LENGTH
	MOV.W	#24*ZCL180,R2		; 921210
	MOV.W	#18*ZCL180,R3		; SET OCR-B CHARACER COLUMN LENGTH
	BSR	CLMUP:16		; CHECK RIGHT MARGIN OVER & UPDATE COLUMN COUNTER
	BNE	CDBARP			; BR. IF RIGHT MARGIN OVER
	ADD.B	#1,@KJCDS2:8		; UPDATE DATA COUNTER
	BSR	SCLUP:16		; UPDATE OCR-B COLUMN COUNTER
	TST.B	R4			;
	BNE	CD39_2			; BR. IF NOT RECEIVE DATA END
	BSR	SCLCA			; ADJUST OCR-B COLUMN LENGTH
	BRA	EXIT_2
	.PAGE
;
; << SUB >>	ADJUST DATA MOVE
;
;	IN	@EDWKS3 : TEXT BUFFER POINTER
;		     FP : CURRENT TEXT BUFFER POINTER
;
;	NO USED R4->FP
;	   USED R0->R3
;
ADDAT:	MOV.W	FP,@-SP 		;
	LDC.B	#0,DP			; RESET < DP >
	MOV.W	@EDWKS3:8,R2		; GET TEXT BUFFER POINTER
	ADDS.B	#ZBCDSZ,R2		; UPDATE TEXT BUFFER POINTER
	MOV.W	FP,R3			;
	ADD.W	#1,R3			;
ADDT_2: MOV.B	@-FP,R1 		; GET SAVE DATA
	MOV.B	R1,@-R3 		; ADJUST SAVE DATA
	CMP.W	R2,FP			;
	BCC	ADDT_2			; BR. IF NOT ADJUST END
	MOV.B	#H'FF,@R3               ;
	MOV.W	@SP+,FP 		;
	RTS
	.PAGE
;
; << SUB >>	UPDATE OCR-B COLUMN
;
;	IN	R3 : OCR-B CHARACTER COLUMN LENGTH
;
;	USE	R0,R3
;
SCLUP:	MOV.W	R3,R0			; SAVE OCR-B COLUMN LENGTH
	ADD.W	@CLMSVS:8,R0		; UPDATE OCR-B COLUMN
	MOV.W	R0,@CLMSVS:8		; SAVE IT
	RTS
;
; << SUB >>	ADJUST OCR-B COLUMN
;
;	USE	R0
;
SCLCA:	MOV.W	@CLMCTC:8,R0		; GET CURRENT COLUMN
	SUB.W	@CLMSVS:8,R0		; CALCULATE ADJUST COLUMN
	MOV.W	R0,@CLMSVS:8		; SAVE IT
	RTS
;
; << SUB >>	GET NUMBER OF DATA & CHECK TEXT BUFFER OVER
;
;	OUT	R4 : NUMBER OF DATA
;
CHKBN:	JSR	@GETC			; GET NUMBER OF DATA
	EXTU	R0			;
	TST.B	R0			;
	BEQ	CHKB_4			; BR. IF NO DATA
	MOV.W	R0,@-SP 		;+ SAVE NUMBER OF DATA
	BSR	SVTBF			; CHECK TEXT BUFFER OVER
	MOV.W	@CLMCTC:8,R0		; GET CURRENT COLUMN
	MOV.W	R0,@CLMSVS:8		; SET OCR-B COLUMN
	MOV.W	@SP+,R4 		;+ UNSAVE NUMBER OF DATA
CHKB_4: RTS
	.PAGE
;
; << SUB >>	CHECK TEXT BUFFER OVER & UPDATE TEXT BUFFER POINTER
;
;	IN	     R0 : USE TEXT BUFFER SIZE
;
;	OUT	     FP : TEXT BUFFER POINTER (CURRENT POINTER)
;		@TXTBFP : NEXT TEXT BUFFER POINTER
;
;	USE	R0,R4,EP
;
SVTBF:	MOV.W	R0,@-SP 		;+ SAVE USE BUFFER SIZE
	BTST.B	#QBCDPR,@PRPTCF:8	;
	BNE	SVTB_2			; BR. IF FIRST TIME PRINT
	JSR	@STPRNT 		; SET END MARK & PRINT
	JSR	@INBFC			; SET NEXT LINE START = CURRENT COLUMN
SVTB_2: MOV.W	@SP+,R0 		;+ UNSAVE USE BUFFER SIZE
	ADDS.B	#ZBCDSZ,R0		; UPDATE BUFFER SIZE
	MOV.W	R0,@-SP 		;+ SAVE ADJUST BUFFER SIZE
	ADD.W	@TXTBFP:8,R0		; UPDATE TEXT BUFFER POINTER
	CMP.W	#TXTBE,R0		;
	BCS	SVTB_4			; BR. IF NOT TEXT BUFFER OVER
	JSR	@STPRNT 		; SET END MARK & PRINT
	JSR	@INBFC			; SET NEXT LINE START = CURRENT COLUMN
SVTB_4: MOV.W	@TXTBFP:8,FP		; GET TEXT BUFFER POINTER
	MOV.W	FP,@EDWKS3:8		; SAVE TEXT BUFFER START POINTER
	MOV.W	@SP+,R0 		;+ UNSAVE ADJUST BUFFER SIZE
	ADD.W	FP,R0			; UPDATE TEXT BUFFER POINTER
	BTST.B	#QBBFFL,@APL0F:8	;
	BNE	SVTB_8			; BR. IF ALREADY BUFFER FULL (NO UPDATE POINTER)
	MOV.W	R0,@TXTBFP:8		; SAVE NEXT TEXT BUFFER POINTER
SVTB_8: MOV.W	@CLMCTC:8,R1		; GET CURRENT START COLUMN COUNTER
	CMP.W	@RMARGS:8,R1		;
	BCC	SVTB_6			; BR. IF ALREADY BUFFER FULL
	MOV.W	R1,@EDWKS5:8		; SAVE CURRENT START COLUMN COUNTER
	BSET.B	#QBSEQR,@APL2F:8	; SET BAR-CODE SEQUENCE RECIVE FLAG
	MOV.W	FP,@-SP 		;
	JSR	@STLSM			; SET LINE START MODE
	JSR	@SETPEL 		; SET PANEL ENLARGE
	MOV.W	@SP+,FP 		;
	RTS
	;
SVTB_6: MOV.W	R1,@EDWKS5:8		; SAVE CURRENT START COLUMN COUNTER
	MOV.W	FP,@TXTBFP:8		; SAVE NEXT TEXT BUFFER POINTER
	BSET.B	#QBSEQR,@APL2F:8	; SET BAR-CODE SEQUENCE RECIVE FLAG
	BSET.B	#QBBFFL,@APL0F:8	; SET BAR-CODE BUFFER FULL FLAG
	RTS
	.PAGE
;
; << SUB >>	UPDATE CURRENT COLUMN
;
;	IN	R0 : INNER CODE
;		R2 : BAR CHARACTER COLUMN LENGTH
;		R3 : OCR-B CHARACTER COLUMN LENGTH
;		R5 : TABLE POINTER
;		FP : TEXT BUFFER POINTER
;
;	OUT	R1 : NOT = 0 ... RIGHT MARGIN OVER
;		R5 : TABLE POINTER
;		FP : TEXT BUFFER POINTER
;
CLUPW:	MOV.W	R2,R3			; SET OCR-B COLUMN LENGTH
CLMUP:	ADD.W	@CLMCTC:8,R2		; UPDATE COLUMN COUNTER
	CMP.W	@RMARGS:8,R2		;
	BHI	CLMU_8			; BR. IF RIGHT MARGIN OVER
	MOV.W	R2,@CLMCTC:8		; UPDATE COLUMN COUNTER
	MOV.B	R0,@FP+ 		; SAVE INNER CODE TO TEXT BUFFER
	CLR.W	R1			; SET NOT RIGHT MARGIN OVER FLAG
	RTS
	;
CLMU_8: MOV.W	#01,R1			; SET RIGHT MARGIN OVER FLAG
	RTS
;
; << SUB >>	SET COMMON FORMAT MODE TO TEXT BUFFER
;
;	IN	R2 : EACH FORMAT FLAG
;		FP : TEXT BUFFER POINTER
;
;	OUT	FP : UPDATE TEXT BUFFER POINTER (IN + 4 byte)
;
;	<< Note !! >>
;		1. COLOR	<<-- BLACK (Fixed)
;		2. SPEED	<<-- LOW SPEED (x 1.0) (Fixed)
;		3. PITCH	<<-- 1/180 inch (Fixed)
;		4. DIRECTION	<<-- UNI-DIRECTION (Fixed)
;		5. EDITING	<<-- NONE (Fixed)
;
;	USE	R2,R4,EP
;
SETBCD: MOV.B	R2,@(YFMATF,FP) 	; SAVE EACH BAR-CODE FORMAT TO TEXT BUFFER
	MOV.W	@CLMCTC:8,R2		; GET CURRENT COLUMN
	MOV.W	R2,@(YCLMCF,FP) 	; SAVE BAR-CODE START COLUMN
	MOV.B	#XCOLBP,@COLORF:8	; SET COLOR = BLACK TO COLOR SAVE AREA
	MOV.B	@PRPTCF:8,R2		; GET PITCH SAVE AREA
	OR.B	#XPT180+XUDPMD,R2	; SET PITCH / DIRECTION
	MOV.B	R2,@PRPTCF:8		; SAVE IT
	CLR.B	@PRMODF:8		; RESET PRINT VARIATION SAVE AREA
	ADDS.B	#ZBCDSZ,FP		; ADDER COMMON DATA SIZE (BAR-CODE)
	RTS
	.PAGE
;
;********************************************************
;							*
;	M4324 AX LOAD BAR-CODE PATTERN TO IMAGE BUFFER	*
;							*
;********************************************************
;
; << SUB >>	LOAD BAR CODE PATTERN TO IMAGE BUFFER
;				< JAN-13 / JAN-08 / CODER-BAR / CODE-39 >
;
;	IN	   FP : TEXT BUFFER POINTER
;
;	OUT	   R4 : PATTERN START POINTER
;		   R5 : PATTERN END   POINTER
;		   FP : TEXT BUFFER POINTER
;		IMGBF : EACH PATTERN
;
;	USE	R0->FP,EP,DP
;
BC39LD:
BCDBLD:
BJ08LD:
BJ13LD: MOV.W	@(YCLMCF,FP),R5 	; GET START COLUMN
	BSR	GETIMG:16		; GET IMAGE BUFFER POINTER
	MOV.W	R1,@-SP 		;+ SAVE IMAGE BUFFER START POINTER
	MOV.B	@(YCOLRF,FP),R5 	; GET DATA LENGTH
	EXTU	R5			;
	ADDS.B	#ZBCDSZ,FP		; ADJUST TEXT BUFFER POINTER
	ADD.W	#-1,R5			;
BJ13_2: BSR	GETADR:16		; GET BAR-CODE CHARACTER TABLE
	LDC.B	#PAGE IMGBF,DP		; SET IMAGE BUFFER PAGE
	MOV.W	@IMGBFP:8,R0		; GET IMAGE BUFFER START POINTER
	MOV.B	R3,@EDWKS4:8		; SAVE PATTERN LENGTH
BJ13_A: MOV.B	@R4+,R2 		; GET BAR-CODE PATTERN
	CLR.B	@EDWKS3:8		; RESET 1 PATTERN DATA COUNTER
BJ13_4: CLR.B	R1			; SET SPACE PATTERN
	SHLR.B	R2			;
	BCC	BJ13_6			; BR. IF SPACE PATTERN
	ADD.B	#-1,R1			; SET BAR PATTERN
BJ13_6: MOV.B	@R0,R3			; GET OLD DATA
	OR.B	R1,R3			;
	MOV.B	R3,@R0+ 		; SAVE 1->8   PIN PATTERN
	MOV.B	R3,@R0+ 		; SAVE 9->16  PIN PATTERN
	MOV.B	R3,@R0+ 		; SAVE 17->24 PIN PATTERN
;S921210
	MOV.B	R3,@R0+ 		; SAVE 1->8   PIN PATTERN
	MOV.B	R3,@R0+ 		; SAVE 9->16  PIN PATTERN
	MOV.B	R3,@R0+ 		; SAVE 17->24 PIN PATTERN
;E921208
	ADD.B	#-1,@EDWKS4:8		; UPDATE PATTERN LENGTH
	BEQ	BJ13_C			; BR. IF PATTERN END
	ADD.B	#1,@EDWKS3:8		; UPDATE DATA COUNTER
	CMP.B	#08,@EDWKS3:8
	BNE	BJ13_4			; BR. IF NOT 1 PATTERN END
	BRA	BJ13_A			; LOAD NEXT PATTERN
	;
BJ13_C: MOV.W	R0,@IMGBFP:8		; SET NEXT IMAGE BUFFER POINTER
	SCB/F	R5,BJ13_2		; BR. IF NOT DATA END
BJ13_8: LDC.B	#0,DP			; RESET < DP >
	MOV.W	@SP+,R4 		;+ UNSAVE IMAGE BUFFER START POINTER
	MOV.W	R0,R5			; SET IMAGE BUFFER END POINTER
	MOV.B	#ZPTC18,R0		; SET PITCH FLAG = 1/180 INCH
	SHLL.B	R0			; MAKE PITCH FLAG = HIGH NIBBLE
	SHLL.B	R0			;
	SHLL.B	R0			;
	SHLL.B	R0			;
	OR.B	#Z10SPD,R0		; SET LOW SPEED FLAG
	JSR	@SETSPD 		; SET SPEED
	RTS
	.PAGE
;
; << SUB >>	GET BAR-CODE CHARACTER TABLE
;
;	IN	   FP : TEXT BUFFER POINTER
;
;	OUT	   R3 : PATTERN LENGTH
;		EP R4 : TAGET TABLE POINTER
;		   FP : TEXT BUFFER POINTER
;
;	USE	R0->R5,EP
;
GETADR: MOV.B	@FP+,R4 		; GET INNER CODE (BAR-CODE CHARACTER)
	BPL	GETA_2			; BR. IF NOT DUMMY DATA
	MOV.B	@FP+,R4 		; GET INNER CODE (BAR-CODE CHARACTER)
	ADD.W	#-1,R5			; ADJUST DATA COUNTER
GETA_2: EXTU	R4			;
	SHLL.W	R4			; INNER CODE x 8 = TABLE OFFSET
	SHLL.W	R4			;
	SHLL.W	R4			;
	ADD.W	#BCDFTB,R4		; ADDER TABLE BASE POINTER
	LDC.B	#PAGE BCDFTB,EP 	; SET TABLE PAGE
	MOV.B	@R4+,R3 		; GET PATTERN LENGTH
	EXTU	R3			;
	RTS
;
; << SUB >>	GET IMAGE BUFFER POINTER
;
;	IN	     R5 : START COLUMN
;
;	OUT	@IMGBFP : IMAGE BUFFER POINTER
;
GETIMG: MOV.W	R5,R1			; SET START COLUMN
	MOV.B	#ZPTC18,R3		; SET PITCH FLAG = 1/180 INCH
	SHLL.B	R3			; MAKE PITCH FLAG = HIGH NIBBLE
	SHLL.B	R3			;
	SHLL.B	R3			;
	SHLL.B	R3			;
	OR.B	#Z10SPD,R3		; SET LOW SPEED FLAG
	JSR	@GETIBP 		; GET IMAGE BUFFER POINTER (= R1)
	ADD.W	#IMGBF,R1		; ADDER IMAGE BUFFER BASE POINTER
	MOV.W	R1,@IMGBFP:8		; SET START IMAGE BUFFER POINTER
	RTS
	.PAGE
;
;********************************************************
;							*
;	M4324 AX LOAD OCR-B PATTERN TO IMAGE BUFFER	*
;							*
;********************************************************
;
; << SUB >>	LOAD OCR-B PATTERN TO IMAGE BUFFER	< JAN-13 >
;
;	IN	   FP : TEXT BUFFER POINTER
;
;	OUT	   R3 : OCR-B COLUMN LENGTH
;		   R4 : PATTERN START POINTER
;		   R5 : PATTERN END   POINTER
;		   FP : TEXT BUFFER POINTER
;		IMGBF : EACH PATTERN
;
;	USE	R0->FP,EP,DP
;
OJ13LD: MOV.W	@(YCLMCF,FP),R5 	; GET START COLUMN
	BSR	GETIMG			; GET IMAGE BUFFER POINTER
	MOV.W	R1,@-SP 		;+ SAVE IMAGE BUFFER START POINTER
	MOV.B	@(YCOLRF,FP),R5 	; GET NUMBER OF DATA (n)
	ADDS.B	#ZBCDSZ,FP		; ADJUST TEXT BUFFER POINTER
	EXTU	R5			;
	ADD.W	#-1,R5			; SET LOOP COUNTER
	BSR	GETOCR:16		; GET OCR-B CG POINTER
	MOV.W	#12,R3			; SET OCR-B CG COLUMN (= 12 COLUMN)
	MOV.W	#0,R1			; SET CLEAR COLUMN
	BSR	OJ13_B			; SAVE OCR-B PATTERN TO IMAGE BUFFER (d1)
	TST.W	R5			;
	BEQ	BJ13_8			; SET SPEED & PRINT
	ADD.W	#-1,R5			; SET LOOP COUNTER
OJ13_2: BSR	GETOCR:16		; GET OCR-B CG POINTER
	MOV.W	#18,R3			; SET OCR-B CG COLUMN (= 18 COLUMN)
	CMP.B	#H'20,@(-1,FP)          ;
	BNE	OJ13_4			; BR. IF NOT CENTER-BAR CODE
	MOV.W	#12,R3			; SET OCR-B CG COLUMN (= 12 COLUMN)
OJ13_4: MOV.W	#3,R1			; SET CLEAR COLUMN
	BSR	OJ13_B			; SAVE OCR-B PATTERN TO IMAGE BUFFER (d2->d7)
	SCB/F	R5,OJ13_2		; BR. IF NOT LOOP END
	BRA	BJ13_8			; SET SPEED & PRINT
	.PAGE
;
; << SUB >>	COPY CG PATTERN TO IMAGE BUFFER
;
;	IN	   R3 : PATTERN COLUMN LENGTH
;		EP R4 : OCR-B CG PATTERN POINTER
;
;	USE	R0,R2,R4,DP,EP
;
OJ13_A: CLR.W	R1			;
OJ13_B: ADD.W	#-1,R3			;
	LDC.B	#PAGE IMGBF,DP		; SET IMAGE BUFFER PAGE
	MOV.W	@IMGBFP:8,R0		; GET IMAGE BUFFER POINTER
OJ13_C: MOV.B	@R0,R2			; GET OLD DATA
	OR.B	@R4+,R2 		; GET 1ST PATTERN
	MOV.B	R2,@R0+ 		; SAVE 1->8 PIN PATTERN
	MOV.B	@R0,R2			; GET OLD DATA
	OR.B	@R4+,R2 		;
	MOV.B	R2,@R0+ 		; SAVE 9->16 PIN PATTERN
	MOV.B	@R0,R2			; GET OLD DATA
	OR.B	@R4+,R2 		;
	MOV.B	R2,@R0+ 		; SAVE 17->24 PIN PATTERN
	SCB/F	R3,OJ13_C		; BR. IF NOT PATTERN END
	BRA	OJ13_F
	;
OJ13_G: LDC.B	#PAGE IMGBF,DP		; SET IMAGE BUFFER PAGE
OJ13_F: ADD.W	#-1,R1			;
	BMI	OJ13_E			; BR. IF CLEAR COLUMN = 0
OJ13_D: CLR.B	@R0+			;
	CLR.B	@R0+			;
	CLR.B	@R0+			;
	SCB/F	R1,OJ13_D		; BR. IF NOT PATTERN END
OJ13_E: LDC.B	#0,DP			; RESET < DP >
;
; << SUB >>	UPDATE IMAGE BUFFER POINTER
;
;	IN	    R0 : IMAGE BUFFER POINTER
;		    R2 : SKIP COLUMN (-> BYTE)
;
;	OUT	    R2 : IMAGE BUFFER POINTER
;		IMGBFP : IMAGE BUFFER POINTER
;
UPIMGP: MOV.W	R0,@IMGBFP:8		; SAVE IT
	CLR.W	R2			; SET SKIP COLUMN = 0
UPIP_2: ADD.W	@IMGBFP:8,R2		; UPDATE IMAGE BUFFER POINTER
	MOV.W	R2,@IMGBFP:8		; SAVE IT
	RTS
	;
UPIP_4: MOV.W	@IMGBFP:8,R0		; GET IMAGE BUFFER POINTER
	BRA	BJ13_8
	.PAGE
;
; << SUB >>	LOAD OCR-B PATTERN TO IMAGE BUFFER	< JAN-08 >
;
;	IN	   FP : TEXT BUFFER POINTER
;
;	OUT	   R3 : OCR-B COLUMN LENGTH
;		   R4 : PATTERN START POINTER
;		   R5 : PATTERN END   POINTER
;		   FP : TEXT BUFFER POINTER
;		IMGBF : EACH PATTERN
;
;	USE	R0->FP,EP,DP
;
OJ08LD: MOV.W	@(YCLMCF,FP),R5 	; GET START COLUMN
	BSR	GETIMG			; GET IMAGE BUFFER POINTER
	MOV.W	R1,@-SP 		;+ SAVE IMAGE BUFFER START POINTER
	MOV.B	@(YCOLRF,FP),R5 	; GET NUMBER OF DATA (n)
	ADDS.B	#ZBCDSZ,FP		; ADJUST TEXT BUFFER POINTER
	EXTU	R5			;
	ADD.W	#-1,R5			; SET LOOP COUNTER
	BSR	GETOCR			; GET OCR-B CG POINTER
	MOV.W	#8,R3			; SET OCR-B CG COLUMN (= 8 COLUMN)
	MOV.W	#0,R1			; SET CLEAR COLUMN
	BSR	OJ13_B			; SAVE OCR-B PATTERN TO IMAGE BUFFER (d1->d4)
	TST.W	R5			;
	BEQ	UPIP_4			; SET SPEED & PRINT
	ADD.W	#-1,R5			; SET LOOP COUNTER
OJ08_2: BSR	GETOCR			; GET OCR-B CG POINTER
	MOV.W	#18,R3			; SET OCR-B CG COLUMN (= 18 COLUMN)
	CMP.B	#H'20,@(-1,FP)          ;
	BNE	OJ08_4			; BR. IF NOT CENTER-BAR CODE
	MOV.W	#12,R3			; SET OCR-B CG COLUMN (= 12 COLUMN)
OJ08_4: MOV.W	#3,R1			; SET CLEAR COLUMN
	BSR	OJ13_B			; SAVE OCR-B PATTERN TO IMAGE BUFFER (d1->d4)
	SCB/F	R5,OJ08_2		; BR. IF NOT LOOP END
	BRA	BJ13_8			; SET SPEED & PRINT
	.PAGE
;
; << SUB >>	LOAD OCR-B PATTERN TO IMAGE BUFFER	< CODER-BAR / CODE-39 >
;
;	IN	   FP : TEXT BUFFER POINTER
;
;	OUT	   R3 : OCR-B COLUMN LENGTH
;		   R4 : PATTERN START POINTER
;		   R5 : PATTERN END   POINTER
;		   FP : TEXT BUFFER POINTER
;		IMGBF : EACH PATTERN
;
;	USE	R0->FP,EP,DP
;
OC39LD:
OCDBLD: MOV.W	@(YCLMCF,FP),R5 	; GET START COLUMN
	BSR	GETIMG			; GET IMAGE BUFFER POINTER
	MOV.W	R1,@-SP 		;+ SAVE IMAGE BUFFER START POINTER
	MOV.B	@(YCOLRF,FP),R5 	; GET NUMBER OF DATA (n)
	ADDS.B	#ZBCDSZ,FP		; ADJUST TEXT BUFFER POINTER
	EXTU	R5			;
	ADD.W	#-1,R5			; SET LOOP COUNTER
OCDB_2: BSR	GETOCR			; GET OCR-B CG POINTER
	MOV.W	#18,R3			; SET OCR-B COLUMN (= 18 COLUMN)
	BSR	OJ13_A			; SAVE OCR-B PATTERN TO IMAGE BUFFER (d1->dn)
	SCB/F	R5,OCDB_2		; BR. IF NOT LOOP END
	BRA	BJ13_8			; SET SPEED & PRINT
	.PAGE
;
; << SUB >>	GET OCR-B CG POINTER
;
;	IN	   FP : TEXT BUFFER POINTER
;
;	OUT	EP R4 : OCR-B CG POINTER
;		   FP : NEXT TEXT BUFFER POINTER
;
GETOCR: MOV.B	@FP+,R4 		; GET NEXT INNER CODE (BAR-CODE CHARACTER)
	BPL	GETO_2			; BR. IF NOT DUMMY DATA
	MOV.B	@FP+,R4 		; GET INNER CODE (BAR-CODE CHARACTER)
	TST.W	R5			;
	BEQ	GETO_2			; BR. IF LOOP COUNTER = 0
	ADD.W	#-1,R5			; ADJUST DATA COUNTER
GETO_2: EXTU	R4			;
	LDC.B	#PAGE BCDCTB,EP 	; SET BAR CHARACTER TO OCR-B CODE TABLE PAGE
	ADD.W	#BCDCTB,R4		; SET BAR CHARACTER TO OCR-B CODE TABLE BASE ADDRESS
	MOV.B	@R4,R1			; GET CONVERSION CODE
	MOV.W	#OCRTB,R4		; SET OCR-B CODE TABLE BASE ADDRESS
	AND.B	#ZN-H'80,R1             ; CLEAR MSB
	SHLL.B	R1			; CODE x 2 (= TABLE OFFSET)
	MOV.B	R1,R4			;
	MOV.W	@R4,R1			; GET CHANGE KANJI CODE
	SWAP	R1			;
	AND.B	#ZN-H'80,R1             ; CLEAR MSB
	SWAP	R1			;
	JSR	@SELKCG 		; SELECT KANJI CG
	ADD.W	#ZKCGCL*3,R4		; ADDER OFFSET H'48 (KANJI HIGH CG)
	RTS
	.END
