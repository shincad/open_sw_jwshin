	.PROGRAM	aplsws
	.HEADING	"M4324 PANEL SW SERVICE MODE PROCESS MODULE"
	.LIST		NOCOND,NOEXP
;********************************************************
;							*
;	PANEL SW SERVICE MODE APPLICATION MODULE	*
;							*
;	FILE NAME	AX_SWS.MAR			*
;	CREATED		04/JUL/1991			*
;							*
;********************************************************
;
	.EXPORT		SWPSRV

	.IMPORT		SWPTB5,EEPTB
	.IMPORT		MGSRV, MGSR1, MGSR2, MGSR3, MGSR3A,MGSR3B
	.IMPORT		MGSR3C,MGSR3D,MGSR3E,MGSR3F,MGSR4, MGSR4A
	.IMPORT		MGSR4B,MGSR4C,MGSR5, MGSR5A,MGSR5B,MGSR5C
	.IMPORT		MGSR5D,MGSR5E,MGSR5F,MGSR6, MGSR6A,MGSR6B
	.IMPORT		MGSR6C,MGSR6D,MGSR6E,MGSR6F,MGSR7, MGSR8
	.IMPORT		SWJMP, SWJMP1,SWTONE,REQTP, RSHM
	.IMPORT		HSPUOP,HSOP,  HSPUMV,HSMVP, HSUP,  HSDOWN

	.INCLUDE	"COMMON.H"
	.INCLUDE	"M43RTM.H"
	.INCLUDE	"SYSEEP.H"
	.INCLUDE	"SCIIOS.H"
	.INCLUDE	"PNLIOS.H"
	.INCLUDE	"SYSRAM.H"
	.INCLUDE	"AX_IOS.H"
	.INCLUDE	"AX_DP3.H"
	.INCLUDE	"AX_RAM.H"

;	.SECTION	APLRAM,DUMMY,LOCATE=H'FE00
;
;	PANEL SW PROCESS WORK AREA
;
	.ORG	H'FE28
SWPVS:	.RES.W	  1			; HEAD SHIFT DEFAULT M1 SAVE
	.PAGE
	.SECTION	APL2,CODE,ALIGN=16
;
;	SERVICE MODE
;
SWPSRV:	MOV.W	#HSPUOP,R4		;
	CALDPH	#ZPOWN+XWACTF		; PUSH AND OPEN HEAD SHIFT
	WAIDP3				; WAIT HEAD GAP ADJUST END
	MOV.W	#SWPTB5,R2		;
	LDC.B	#PAGE MGSRV,EP		;
	MOV.W	#MGSRV,R4		;
	CALIOS	#DSPMDC			; CHANGE MODE
SWR1:	MOV.W	#MGSR1,R4		;
	BSR	SWDSPM			; DISPLAY EEPROM DATA MESSAGE
	MOV.W	#8*ZH+ZLPOS+31,R2	; SET CURSOR POISTION
	MOV.W	R2,@CURDF:8		; SET BLINK CURSOR DISPLAY MODE
SWR1_1:	MOV.B	#ZLPOS+6,R2		;
	MOV.B	FP,R3			;
	CALIOS	#DSPHX2			; DISPLAY EEPROM ADDRESS
	MOV.B	@FP,R3			; GET EEPROM DATA
	BSR	SWDHX2			; DISPLAY EEPROM DATA
SWR1_2:	BSR	SWSLP5:16		; WAIT PANEL SW INPUT
	BRA	SWR1_2:16		;  0  SHIFT        SW
	BRA	SWR1_3:16		;  1  DATA UP      SW
	BRA	SWR1_4:16		;  2  DATA DOWN    SW
	BRA	SWR1_5:16		;  3  ADDRESS UP   SW
	BRA	SWR1_6:16		;  4  ADDRESS DOWN SW
	MOV.B	R3,@FP			;  5  SET          SW
	BCLR.B	#QCURON,@CURDF:8	; SET CURSOR DISPLAY OFF
	JSR	@SWTONE			; CLICK TONE ON
	CALIOS	#SCIEEP			; SEND EEPROM DATA TO SLAVE CPU
	BRA	SWR1_2			;
					;
SWR1_3:	BSR	SWUPB			; UP EEPROM DATA
	BRA	SWR1_2			;
					;
SWR1_4:	BSR	SWDNB			; DOWN EEPROM DATA
	BRA	SWR1_2			;
					;
SWR1_5:	CMP.B	#ZN,FP			;
	BEQ	SWR1_2			; BR IF ALREADY MAX
	ADD.B	#1,FP			; UP EEPROM ADDRESS
	BRA	SWR1_7			;
					;
SWR1_6:	TST.B	FP			;
	BEQ	SWR1_2			; BR IF ALREADY MIN
	ADD.B	#-1,FP			; DOWN EEPROM ADDRESS
SWR1_7:	BCLR.B	#QCURON,@CURDF:8	; SET CURSOR DISPLAY OFF
	JSR	@SWTONE			; CLICK TONE ON
	BRA	SWR1_1			;
	.PAGE
;
;	DISPLAY MENU
;
;	IN   EP R4 : MENU MESSAGE POINTER
;
;	OUT	R3 : EEPROM WORD DATA
;		FP : EEPROM DATA POINTER
;
SWDSPM:					;
	CALIOS	#DSPMEN			; DISPLAY MENU
	MOV.W	#EEPBF,FP		; GET EEPROM BUFFER POINTER
	MOV.B	@(-1,R4),FP		; GET EEPROM BUFFER OFFSET
	MOV.W	@FP,R3			; GET CURRENT VALUE
	RTS				;
	.PAGE
;
;	VALUE UP/DOWN
;
;	IN	R3 : OLD VALUE
;
;	OUT	R3 : NEW VALUE
;		 Z : 0=SW IGNORE
;
SWUPB:	CMP.B	#ZN,R3			;
	BCC	SWDN_3			; BR IF ALREADY MAX
	ADD.B	#1,R3			; UP EEPROM DATA
	BRA	SWDN_1			;

SWDNB:	TST.B	R3			;
	BEQ	SWDN_3			; BR IF ALREADY MIN
	ADD.B	#-1,R3			; DOWN EEPROM DATA
SWDN_1:	JSR	@SWTONE			; CLICK TONE ON
	BSET.B	#QCURON,@CURDF:8	; SET CURSOR DISPLAY ON
	CMP.B	@FP,R3			;
	BNE	SWDHX2			; BR IF NOT SAME VALUE
	BCLR.B	#QCURON,@CURDF:8	; SET CURSOR DISPLAY OFF
SWDHX2:	MOV.B	#ZLPOS+29,R2		;
	CALIOS	#DSPHX2			; DISPLAY BYTE VALUE
	MOV.B	#0,R0			; SET Z-FLAG ON FOR SW OK
	RTS				;
					;
SWDN_3:	MOV.B	#1,R0			; RESET Z-FLAG FOR SW IGNORE
	RTS				;

SWUPW:	CMP.W	#ZNN,R3			;
	BCC	SWDN_3			; BR IF ALREADY MAX
	ADD.W	#1,R3			; UP EEPROM DATA
	BRA	SWDN_4			;

SWDNW:	TST.W	R3			;
	BEQ	SWDN_3			; BR IF ALREADY MIN
	ADD.W	#-1,R3			; DOWN EEPROM DATA
SWDN_4:	JSR	@SWTONE			; CLICK TONE ON
SWDHXC:	BSET.B	#QCURON,@CURDF:8	; SET CURSOR DISPLAY ON
	CMP.W	@FP,R3			;
	BNE	SWDHX4			; BR IF NOT SAME VALUE
	BCLR.B	#QCURON,@CURDF:8	; SET CURSOR DISPLAY OFF
SWDHX4:	MOV.B	#ZLPOS+27,R2		;
	CALIOS	#DSPHX4			; DISPLAY WORD VALUE
	MOV.B	#0,R0			; SET Z-FLAG ON FOR SW OK
	RTS				;
	.PAGE
;
;	WAIT PANEL SW INPUT
;
;	IN	NONE
;
;	OUT	NONE
;
SWSLP1:					;
	SLPTSK				; WAIT PANEL SW INPUT
	CMP.B	#8*3,R1			;
	BNE	SWSL_2			; BR IF NOT HEAD GAP SW
SWSL_1:	MOV.B	#(6-1)*3,R1		;
	JMP	@SWJMP			;

SWSLP2:					;
	SLPTSK				; WAIT PANEL SW INPUT
	CMP.B	#9*3,R1			;
	BEQ	SWSL_1			; BR IF PRINT SW
	BRA	SWSL_2			;

SWSLP3:					;
	SLPTSK				; WAIT PANEL SW INPUT
	CMP.B	#10*3,R1		;
	BEQ	SWSL_1			; BR IF RIBBON SW
	BRA	SWSL_2			;

SWSLP4:					;
	SLPTSK				; WAIT PANEL SW INPUT
SWSL_2:	CMP.B	#6*3,R1			;
	BCC	SWSL_4			; BR IF MENU/FINISH SW
	SUB.B	#1*3,R1			;
	BCC	SWSL_3			; BR IF NOT SHIFT SW
	MOV.B	#(4-1)*3,R1		; SET NEXT MENU SW NO.
SWSL_3:	CMP.B	#(3-1)*3,R1		;
	BCS	SWJMP1			; BR IF VALUE UP/DOWN SW
	BCLR.B	#QCURON,@CURDF:8	; SET CURSOR DISPLAY OFF
	JMP	@SWJMP			;

SWSLP5:					;
	SLPTSK				; WAIT PANEL SW INPUT
	CMP.B	#6*3,R1			;
	BCS	SWJMP1			; BR IF NOT MENU/FINISH SW
SWSL_4:	MOV.W	#ZLPOS+31,R2		; SET CURSOR POSITION
	MOV.W	R2,@CURDF:8		; SET BLINK CURSOR DISPLAY MODE
	ADD.W	#2,SP			; ADJUST STACK POINTER
	SUB.B	#6*3,R1			;
	JSR	@SWJMP			; GOTO PANEL SW ENTRY
	BRA	SWR2:16			;  6  SENSOR LEVEL ADJUST MENU SW
	BRA	SWR3:16			;  7  INSERT POS.  ADJUST MENU SW
	BRA	SWR4:16			;  8  HEAD GAP     ADJUST MENU SW
	BRA	SWR5:16			;  9  PRINT        ADJUST MENU SW
	BRA	SWR7:16			; 10  RIBBON SHIFT ADJUST MENU SW
	BRA	SWR8:16			; 11  CUT POSITION ADJUST MENU SW
	CALIOS	#EESAVE			; 12  FINISH                   SW
	CALDPH	#ZPINI+XWACTF		; CHANGE PAPER MODE
	WAIDP3				; WAIT DP3 ACTION END
	RTS				; EXIT MODE
	.PAGE
;
;	TOP SENSOR LEVEL ADJUST
;
SWR2:	MOV.W	#MGSR2,R4		;
	BSR	SWDSPM			; DISPLAY MENU
	CALIOS	#DSPADS			; DISPLAY TOP SENSOR A/D PORT VALUE
	BSR	SWDHX2			; DISPLAY TOP SENSOR THRESHOLD
SWR2_1:	BSR	SWSLP4			; WAIT PANEL SW INPUT
	BRA	SWR2_2:16		;  1  VALUE UP      SW
	BRA	SWR2_3:16		;  2  VALUE DOWN    SW
	BRA	SWR1:16			;  3  PREVIOUS MENU SW
	BRA	SWR3:16			;  4  NEXT     MENU SW
	MOV.W	R3,@FP			;  5  SET           SW
	MOV.B	R3,R2			;
	CALIOS	#SCIADV			; SET TOP SENSOR A/D THRESHOLD
	BRA	SWR2_1			;
					;
SWR2_2:	BSR	SWUPB			; UP TOP SENSOR LEVEL
	BRA	SWR2_1			;
					;
SWR2_3:	BSR	SWDNB			; DOWN TOP SENSOR LEVEL
	BRA	SWR2_1			;
	.PAGE
;
;	INSERT POSITION ADJUST
;
SWR3:	MOV.W	#MGSR3,R4		; FORMS
	BRA	SWR3X			;
					;
SWR3A:	MOV.W	#MGSR3A,R4		; SHEET
	BRA	SWR3X			;
					;
SWR3B:	MOV.W	#MGSR3B,R4		; SHEET (ACSF4)
	BRA	SWR3X			;
					;
SWR3C:	MOV.W	#MGSR3C,R4		; ACSF0
	BRA	SWR3X			;
					;
SWR3D:	MOV.W	#MGSR3D,R4		; ACSF1
	BRA	SWR3X			;
					;
SWR3E:	MOV.W	#MGSR3E,R4		; ACSF2
	BRA	SWR3X			;
					;
SWR3F:	MOV.W	#MGSR3F,R4		; ACSF3
SWR3X:	BSR	SWDSPM			; DISPLAY MENU
	BSR	SWDHX4			; DISPLAY INSERT POSITION VALUE
SWR3_1:	BSR	SWSLP4			; WAIT PANEL SW INPUT
	BRA	SWR3_2:16		;  1  VALUE UP      SW
	BRA	SWR3_3:16		;  2  VALUE DOWN    SW
	BRA	SWR3_4:16		;  3  PREVIOUS MENU SW
	BRA	SWR3_5:16		;  4  NEXT     MENU SW
	MOV.W	R3,@FP			;  5  SET           SW
	BRA	SWR3_1			;
					;
SWR3_2:	BSR	SWUPW			; UP INSERT POSITION
	BRA	SWR3_1			;
					;
SWR3_3:	BSR	SWDNW			; DOWN INSERT POSITION
	BRA	SWR3_1			;
					;
SWR3_4:	MOV.B	#0,R1			;
	BRA	SWR3_6			;
					;
SWR3_5:	MOV.B	#2,R1			;
SWR3_6:	MOV.B	FP,R4			;
	SUB.B	#E2INB,R4		;
	BCC	SWR3_7			; BR IF NOT FORMS
	MOV.B	#0,R4			;
SWR3_7:	SHLR.B	R4			;
	ADD.B	R4,R1			; GET JUMP TABLE OFFSET
	MULXU.B	#3,R1			;
	JSR	@SWJMP1			; GOTO PREV/NEXT MENU
	BRA	SWR2:16			;
	BRA	SWR3:16			;
	BRA	SWR3A:16		;
	BRA	SWR3B:16		;
	BRA	SWR3C:16		;
	BRA	SWR3D:16		;
	BRA	SWR3E:16		;
	BRA	SWR3F:16		;
;	BRA	SWR4			;
	.PAGE
;
;	HEAD NOSE LENGTH SET
;
SWR4:	MOV.W	#MGSR4,R4		;
	BSR	SWDSPM			; DISPLAY MENU
	BSR	SWDHX4			; DISPLAY NOSE LENGTH
SWR4_1:	BSR	SWSLP1			; WAIT PANEL SW INPUT
	BRA	SWR4_2:16		;  1  VALUE UP        SW
	BRA	SWR4_3:16		;  2  VALUE DOWN      SW
	BRA	SWR3F:16		;  3  PREVIOUS MENU   SW
	BRA	SWR4B:16		;  4  NEXT     MENU   SW
	BRA	SWR4A:16		;  5  SET             SW
	CALDPH	#ZPHSA4+XWACTF		;  6  HEAD GAP ADJUST SW
	BSR	SWR4W			; WAIT HEAD SHIFT ACTION END
	BRA	SWR4_1			;
					;
SWR4_2:	BSR	SWUPW			; UP HEAD NOSE LENGTH
	BRA	SWR4_1			;
					;
SWR4_3:	BSR	SWDNW			; DOWN HEAD NOSE LENGTH
	BRA	SWR4_1			;
	;
SWR4X:					;
	CALDPH	#ZPOWN+XWACTF		; SEND ANY PACKET TO DP3
SWR4W:	MOV.W	R3,@-SP			;
	WAIDP3				; WAIT HEAD SHIFT ACTION END
	MOV.W	@SP+,R3			;
	RTS				;
	.PAGE
;
;	HEAD GAP FACTORY ADJUST
;
SWR4A:	MOV.W	R3,@FP			; SET NEW HEAD NOSE LENGTH
	MOV.B	@CURDF+1:8,R2		;
	BCLR.B	#QCURON,R2		; SET CURSOR DISPLAY OFF
	MOV.B	R2,@CURDF:8		; RESET MENU CURSOR DISPLAY MODE
	CALDPH	#ZPHSA1+XWACTF		; ADJUST HEAD GAP
	WAIDP3				; WAIT HEAD GAP ADJUST END
	MOV.W	@HSPC:8,R3		; GET Ms
	SUB.W	@EEPTB+E2HSN,R3		; SUB DEFAULT HEAD SHIFT BACK AMOUNT
	MOV.W	R3,@SWPVS:8		; SAVE DEFAULT M1 POSITION
	MOV.W	#HSOP,R4		;
	CALDPH	#ZPOWN			; OPEN HEAD SHIFT
	MOV.W	#RSHM,R4		;
	CALDPH	#ZPOWN+XWACTF		; RIBBON HOME
	WAIDP3				; WAIT HEAD SHIFT OPEN END
SWR4_4:					;
	SLPTSK				; WAIT PANEL SW INPUT
	CMP.B	#8*3,R1			;
	BNE	SWR4_4			; BR IF NOT HEAD GAP SW
	MOV.W	#HSMVP,R4		;
SWR4_5:	JSR	@SWTONE			; CLICK TONE ON
	MOV.W	@SWPVS:8,R3		; GET DEFAULT M1 POSITION
	CALDPH	#ZPOWN+XWACTF		; MOVE HEAD SHIFT TO M1 POSITION
	WAIDP3				; WAIT HEAD SHIFT MOVE END
	MOV.W	#MGSR4A,R4		;
	BSR	SWDSPM			; DISPLAY MENU
	MOV.W	@EEPTB+E2HSN,R3		; GET DEFAULT HEAD SHIFT BACK AMOUNT
	BSR	SWDHXC			; DISPLAY HEAD SHIFT BACK AMOUNT
SWR4_6:					;
	SLPTSK				; WAIT PANEL SW INPUT
	CMP.B	#1*3,R1			;
	BEQ	SWR4_7			; BR IF VALUE UP SW
	CMP.B	#2*3,R1			;
	BEQ	SWR4_8			; BR IF VALUE DOWN SW
	CMP.B	#5*3,R1			;
	BEQ	SWR4_9			; BR IF SET SW
	CMP.B	#8*3,R1			;
	BNE	SWR4_6			; BR IF NOT HEAD GAP SW
	MOV.W	#HSPUMV,R4		; HEAD SHIFT PUSH AND MOVE M1 POSITION
	BRA	SWR4_5			;
					;
SWR4_7:	BSR	SWUPW			; UP HEAD SHIFT BACK AMOUNT
	BNE	SWR4_6			; BR IF ALREADY MAX VALUE
	MOV.W	#HSUP,R4		; UP HEAD SHIFT
	BSR	SWR4X			; WAIT HEAD GAP ADJUST END
	BRA	SWR4_6			;
					;
SWR4_8:	BSR	SWDNW			; DOWN HEAD SHIFT BACK AMOUNT
	BNE	SWR4_6			; BR IF ALREADY MIN VALUE
	MOV.W	#HSDOWN,R4		; DOWN HEAD SHIFT
	BSR	SWR4X			; WAIT HEAD GAP ADJUST END
	BRA	SWR4_6			;
					;
SWR4_9:	JSR	@SWTONE			; CLICK TONE ON
	MOV.W	R3,@FP			; SET NEW HEAD SHIFT N
	MOV.W	@HSPC:8,R3		;
	MOV.W	R3,@(E2HSM1-E2HSN,FP)	; SET NEW HEAD SHIFT MOTOR PHASE
	CLR.W	R0			;
	MOV.B	@HSPS:8,R0		;
	MOV.W	R0,@(E2HSF-E2HSN,FP)	; SET NEW HEAD SHIFT MOTOR PHASE
	CALDPH	#ZPHSA2+XWACTF		; AJUST HEAD GAP (R3 = NEW M1)
	WAIDP3				; WAIT HEAD GAP AJUST END
	MOV.W	#ZLPOS+31,R2		; SET CURSOR POSITION
	MOV.W	R2,@CURDF:8		; SET BLINK CURSOR DISPLAY MODE
	BRA	SWR4			;
	.PAGE
;
;	HEAD EXCHANGE ADJUST
;
SWR4B:	MOV.W	#MGSR4B,R4		;
	BSR	SWDSPM			; DISPLAY MENU
	BSR	SWDHX4			; DISPLAY NOSE LENGTH
SWR4_A:	BSR	SWSLP1			; WAIT PANEL SW INPUT
	BRA	SWR4_C:16		;  1  VALUE UP        SW
	BRA	SWR4_D:16		;  2  VALUE DOWN      SW
	BRA	SWR4:16			;  3  PREVIOUS MENU   SW
	BRA	SWR4C:16		;  4  NEXT     MENU   SW
	BRA	SWR4_B:16		;  5  SET             SW
SWR4_B:	MOV.W	@FP,R0			;  6  HEAD GAP ADJUST SW
	SUB.W	R3,R0			; CALCULATE L - L'
	MOV.W	@(E2HSM1-E2HSL,FP),R4	; GET OLD M1
	ADD.W	R0,R4			;
	ADD.W	R0,R4			; CALCULATE NEW M1
	ADD.W	R0,R4			;
	ADD.W	R0,R4			;
	MOV.W	R3,@FP			; SET NEW HEAD NOSE LENGTH
	MOV.W	R4,R3			; SET NEW HEAD SHIFT M1
	CALDPH	#ZPHSA2+XWACTF		; ADJUST HEAD GAP
	WAIDP3				; WAIT HEAD GAP ADJUST END
	MOV.W	@FP,R3			; UNSAVE HEAD NOSE LENGTH
	BRA	SWR4_A			;
					;
SWR4_C:	BSR	SWUPW			; UP HEAD NOSE LENGTH
	BRA	SWR4_A			;
					;
SWR4_D:	BSR	SWDNW			; DOWN HEAD NOSE LENGTH
	BRA	SWR4_A			;

;
;	PLATEN EXCHANGE ADJUST
;
SWR4C:	MOV.W	#MGSR4C,R4		;
	BSR	SWDSPM			; DISPLAY MENU
SWR4_E:	BSR	SWSLP1			; WAIT PANEL SW INPUT
	BRA	SWR4_E:16		;  1  VALUE UP        SW
	BRA	SWR4_E:16		;  2  VALUE DOWN      SW
	BRA	SWR4B:16		;  3  PREVIOUS MENU   SW
	BRA	SWR5:16			;  4  NEXT     MENU   SW
	BRA	SWR4_F:16		;  5  SET             SW
SWR4_F:					;  6  HEAD GAP ADJUST SW
	CALDPH	#ZPHSA3+XWACTF		; ADJUST HEAD GAP
	WAIDP3				; WAIT HEAD GAP ADJUST END
	BRA	SWR4_E			;
	.PAGE
;
;	SIGNED VALUE UP/DOWN
;
;	IN	R3 : OLD VALUE
;
;	OUT	R3 : NEW VALUE
;
SWSUPB:	CMP.B	#127,R3			;
	BEQ	SWSD_6			; BR IF ALREADY MAX
	CMP.B	#ZMSB,R3		;
	BHI	SWSD_2			; BR IF MINUS BIT ON
	BNE	SWSU_1			; BR IF NOT MINUS ZERO
	MOV.B	#0,R3			;
SWSU_1:	ADD.B	#1,R3			; COUNT UP VALUE
	BRA	SWSD_3			;

SWSDNB:	CMP.B	#ZMSB+127,R3		;
	BEQ	SWSD_6			; BR IF ALREADY MIN
	TST.B	R3			;
	BNE	SWSD_1			; BR IF NOT ZERO
	MOV.B	#ZMSB,R3		;
SWSD_1:	BMI	SWSU_1			; BR IF MINUS BIT ON
SWSD_2:	ADD.B	#-1,R3			;
	CMP.B	#ZMSB,R3		;
	BNE	SWSD_3			; BR IF NOT MINUS ZERO
	MOV.B	#0,R3			;
SWSD_3:	JSR	@SWTONE			; CLICK TONE ON
	BSET.B	#QCURON,@CURDF:8	; SET CURSOR DISPLAY ON
	CMP.B	@FP,R3			;
	BNE	SWDHXS			; BR IF NOT SAME VALUE
	BCLR.B	#QCURON,@CURDF:8	; SET CURSOR DISPLAY OFF
SWDHXS:	MOV.B	#ZLPOS+28,R2		;
	CALIOS	#DSPHXS			; DISPLAY SIGNED HEX
SWSD_6:	RTS				;
	.PAGE
;
;	PRINT SPEED/REVERSE ADJUST
;
SWR5:	MOV.W	#MGSR5,R4		; SET MENU MESSAGE POINTER
	BRA	SWR6X			;

SWR5A:	MOV.W	#MGSR5A,R4		; SET MENU MESSAGE POINTER
	BRA	SWR6X			;

SWR5B:	MOV.W	#MGSR5B,R4		; SET MENU MESSAGE POINTER
	BRA	SWR6X			;

SWR5C:	MOV.W	#MGSR5C,R4		; SET MENU MESSAGE POINTER
	BRA	SWR6X			;

SWR5D:	MOV.W	#MGSR5D,R4		; SET MENU MESSAGE POINTER
	BRA	SWR6X			;

SWR5E:	MOV.W	#MGSR5E,R4		; SET MENU MESSAGE POINTER
	BRA	SWR6X			;

SWR5F:	MOV.W	#MGSR5F,R4		; SET MENU MESSAGE POINTER
	BRA	SWR6X			;

SWR6:	MOV.W	#MGSR6,R4		; SET MENU MESSAGE POINTER
	BRA	SWR6X			;

SWR6A:	MOV.W	#MGSR6A,R4		; SET MENU MESSAGE POINTER
	BRA	SWR6X			;

SWR6B:	MOV.W	#MGSR6B,R4		; SET MENU MESSAGE POINTER
	BRA	SWR6X			;

SWR6C:	MOV.W	#MGSR6C,R4		; SET MENU MESSAGE POINTER
	BRA	SWR6X			;

SWR6D:	MOV.W	#MGSR6D,R4		; SET MENU MESSAGE POINTER
	BRA	SWR6X			;

SWR6E:	MOV.W	#MGSR6E,R4		; SET MENU MESSAGE POINTER
	BRA	SWR6X			;

SWR6F:	MOV.W	#MGSR6F,R4		; SET MENU MESSAGE POINTER
SWR6X:	MOV.B	@(-2,R4),R5		; GET TEST PRINT TYPE NO.
	CALIOS	#DSPMEN			; DISPLAY MENU
	MOV.W	#EEPBF,FP		; GET EEPROM BUFFER POINTER
	MOV.B	@(-1,R4),FP		; GET EEPROM BUFFER OFFSET
	MOV.B	@FP,R3			; GET PRINT ADJUST VALUE
	BSR	SWDHXS			; DISPLAY PRINT ADJUST VALUE
SWR6_1:	BSR	SWSLP2			; WAIT PANEL SW INPUT
	BRA	SWR6_4:16		;  1  VALUE UP      SW
	BRA	SWR6_5:16		;  2  VALUE DOWN    SW
	BRA	SWR6_6:16		;  3  PREVIOUS MENU SW
	BRA	SWR6_7:16		;  4  NEXT     MENU SW
	BRA	SWR6_2:16		;  5  SET           SW
SWR6_2:	MOV.B	R3,@FP			;  6  PRINT         SW
	CALIOS	#SCIPAJ			; SET PRINT POSITION ADJUST
	MOV.B	R5,R0			; GET TEST PRINT TYPE
	CMP.B	#7,R0			;
	BCS	SWR6_3			; BR IF SPEED ADJUST
	SUB.B	#7,R0			; CORRECT TEST PRINT TYPE
SWR6_3:	ADD.B	#1,R0			;
	JSR	@REQTP			; REQUEST TEST PRINT
	BRA	SWR6_1			;
					;
SWR6_4:	CMP.B	#127,R3			;
	BGE	SWR6_1			; BR IF ALREADY MAX
	BSR	SWSUPB			; UP PRINT ADJUST VALUE
	BRA	SWR6_1			;
					;
SWR6_5:	CMP.B	#ZMSB+127,R3		;
	BCC	SWR6_1			; BR IF ALREADY MIN
	BSR	SWSDNB			; DOWN PRINT ADJUST VALUE
	BRA	SWR6_1			;
					;
SWR6_6:	MOV.B	#0,R1			;
	BRA	SWR6_8			;
					;
SWR6_7:	MOV.B	#2,R1			;
SWR6_8:	ADD.B	R5,R1			; GET JUMP TABLE OFFSET
	MULXU.B	#3,R1			;
	JSR	@SWJMP1			; GOTO PREV/NEXT MENU
	BRA	SWR4C:16		;
	BRA	SWR5:16			;
	BRA	SWR5A:16		;
	BRA	SWR5B:16		;
	BRA	SWR5C:16		;
	BRA	SWR5D:16		;
	BRA	SWR5E:16		;
	BRA	SWR5F:16		;
	BRA	SWR6:16			;
	BRA	SWR6A:16		;
	BRA	SWR6B:16		;
	BRA	SWR6C:16		;
	BRA	SWR6D:16		;
	BRA	SWR6E:16		;
	BRA	SWR6F:16		;
;	BRA	SWR7			;
	.PAGE
;
;	RIBBON SHIFT ADJUST
;
SWR7:	MOV.W	#MGSR7,R4		;
	BSR	SWDSPM			; DISPLAY MENU
	BSR	SWDHXS			; DISPLAY RIBBON SHIFT ADJUST VALUE
SWR7_1:	BSR	SWSLP3			; WAIT PANEL SW INPUT
	BRA	SWR7_3:16		;  1  VALUE UP      SW
	BRA	SWR7_4:16		;  2  VALUE DOWN    SW
	BRA	SWR6F:16		;  3  PREVIOUS MENU SW
	BRA	SWR8:16			;  4  NEXT     MENU SW
	BRA	SWR7_2:16		;  5  SET           SW
SWR7_2:	MOV.W	R3,@FP			;  6  RIBBON        SW
	MOV.B	#8,R0			; GET TEST PRINT TYPE
	JSR	@REQTP			; REQUEST TEST PRINT
	BRA	SWR7_1			;
					;
SWR7_3:	CMP.B	#127,R3			;
	BGE	SWR7_1			; BR IF ALREADY REACH MAX
	BSR	SWSUPB			; UP RIBBON SHIFT ADJUST
	BRA	SWR7_1			;
					;
SWR7_4:	CMP.B	#ZMSB+127,R3		;
	BCC	SWR7_1			; BR UF ALREADY MIN
	BSR	SWSDNB			; DOWN RIBBON SHIFT ADJUST
	BRA	SWR7_1			;
	.PAGE
;
;	FORMS CUT POSITION ADJUST
;
SWR8:	MOV.W	#MGSR8,R4		;
	BSR	SWDSPM			; DISPLAY MENU
	BSR	SWDHX4			; DISPLAY CUT POSITION VALUE
SWR8_1:	BSR	SWSLP4			; WAIT PANEL SW INPUT
	BRA	SWR8_2:16		;  1  VALUE UP      SW
	BRA	SWR8_3:16		;  2  VALUE DOWN    SW
	BRA	SWR7:16			;  3  PREVIOUS MENU SW
	BRA	SWR1:16			;  4  NEXT     MENU SW
	MOV.W	R3,@FP			;  5  SET           SW
	BRA	SWR8_1			;
					;
SWR8_2:	BSR	SWUPW			; UP CUT POSITION
	BRA	SWR8_1			;
					;
SWR8_3:	BSR	SWDNW			; DOWN CUT POSITION
	BRA	SWR8_1			;
	.END
