	.PROGRAM	aplswp
	.HEADING	"M4324 PANEL SW PROCESS MODULE"
	.LIST		NOCOND,NOEXP
;********************************************************
;							*
;	PANEL SW PROCESS APPLICATION MODULE		*
;							*
;	FILE NAME	AX_SWP.MAR			*
;	CREATED 	31/MAY/1991			*
;							*
;********************************************************
;
	.EXPORT 	SWPTBL
	.EXPORT 	SWPRST,SWPSTA
	.EXPORT 	SWJMP, SWJMP1,SWTONE

	.IMPORT 	SWPTCB,SWPSTK
	.IMPORT 	SWPTB1,SWPTB2,SWPTB3,SWPTB4,EEPTB
	.IMPORT 	MGPFS, MGMDM, MLMDM
	.IMPORT 	MGPFC, MGPF1, MGPF2, MGPF3, MGPF4, MGPF5
	.IMPORT 	MGPF6, MGPF7, MGPF7A,MGPF7B,MGPF7C,MGPF7D
	.IMPORT 	MGPF7E,MGPF8, MGPF9, MGPFA, MLPFA
	.IMPORT 	MLPF2, MLPF3, MLPF4, MLPF6, MLPF7, MLPF8
	.IMPORT 	MGSPC, MGSP1, MGSP2, MGSP2A,MGSP3 ;, MGSP4
;911213 .IMPORT 	MGSP5, MGSP6, MGSP6A,
	.IMPORT 	MGSP7, MGSP7A,MGSP7B
	.IMPORT 	MGSP7C,MGSP7D,MGSP7E,MGSP7F,MGSP8
	.IMPORT 	MLSP2, MLSP2A,MLSP3 ;, MLSP4, MLSP5, MLSP6
;911213 .IMPORT 	MLSP6A,
	.IMPORT 	MLSP7, MLSP7A,MLSP7B,MLSP7C,MLSP7D
	.IMPORT 	MLSP7E,MLSP7F,MLSP8
	.IMPORT 	CHGPF, CHGMD, CHKDP3,CHKPMD,GETPFP,HSEEMD
	.IMPORT 	SWPSRV,REQTP
	.IMPORT 	MGMKM, MLMKM		; 911223
	.IMPORT 	MGMYM, MLMYM		; 911223
	.IMPORT 	MGMZM, MLMZM		; 911224
	.IMPORT 	MDFIX, MDFIX1, MDFIX2	; 911224

	.INCLUDE	"COMMON.H"
	.INCLUDE	"M43RTM.H"
	.INCLUDE	"PNLIOS.H"
	.INCLUDE	"SYSRAM.H"
	.INCLUDE	"AX_EEP.H"
	.INCLUDE	"AX_IOS.H"
	.INCLUDE	"AX_MON.H"
	.INCLUDE	"AX_DP3.H"
	.INCLUDE	"AX_RAM.H"
;
;	.SECTION	APLRAM,DUMMY,LOCATE=H'FE00
;
;	PANEL SW PROCESS WORK AREA
;
	.ORG	H'FE28
SWPVS:	.RES.W	  1			; SELECT ITEM NO./VALUE SAVE
	.RES.B	  6			; RESERVED AREA
	.PAGE
;
	.INCLUDE	"AX_TMP.H"      ; 911226
;
	.SECTION	APL2,CODE,ALIGN=16
;
;	TASK DEFINITION TABLE
;
	.ALIGN		  2
SWPTBL: .DATA.W 	SWPTCB		; TCB
	.DATA.B 	  2		; PRIORITY
	.DATA.B 	ZTIST2		; STATUS
	.DATA.W 	SWPSTK		; STACK
	.DATA.W 	SWPINI		; ENTRY
	.DATA.B 	PAGE SWPINI	; CP
	.DATA.B 	  0		; DP
	.DATA.B 	  0		; EP
	.DATA.B 	ZBR		; BR
	.DATA.W 	  0		; NO MAIL BOX
	.DATA.W 	  0		; NO PACKET

;
;	START PANEL SW TASK
;
;	IN	NONE
;
;	OUT	NONE
;
SWPRST: 				;
	CALIOS	#SWPDI			; DISABLE PANEL SW
	MOV.W	#SWPTCB,R1		;
	TERTSK				; TERMINATE PANEL SW TASK
SWPSTA: LDC.B	#PAGE SWPTBL,EP 	;
	MOV.W	#SWPTBL,R4		;
	STATSK				; START PANEL SW TASK
	RTS				;
	.PAGE
;
;	PANEL SW TABLE JUMP
;
;	IN	R1 : LOGICAL PANEL SW NO.
;
;	OUT	NONE
;
SWJMP:	BSR	SWTONE			; CLICK TONE ON
SWJMP1: ADD.W	@SP+,R1 		; ADD JUMP TABLE BASE
	JMP	@R1			; JUMP BY TABLE

;
;	CLICK TONE ON
;
;	IN	NONE
;
;	OUT	NOEN
;
SWTONE: MOV.W	R1,@-SP 		;
	CALIOS	#BZPSW			; CLICK TONE ON
	MOV.W	@SP+,R1 		;
	RTS				;

;
;	INITIALIZE PANEL SW PROCESS
;
SWPINI: MOV.B	@MODEF:8,R0		; GET FUNCTION MODE
	AND.B	#XSERVM+XSPCM+XPFCM,R0	;
	BEQ	SWPI_1			; BR IF NORMAL MODE
	BSR	SWPPFC:16		; START SPECIAL MENU MODE
	BCLR.B	#QPFCM,@MODEF:8 	; RESET PF CHANGE MODE
	BCLR.B	#QSPCM,@MODEF:8 	; RESET SPEC. CHANGE MODE
	BCLR.B	#QSERVM,@MODEF:8	; RESET SERVICE MODE
	MOV.B	#ZNDAP,R3		; SET NORMAL DATA PROCESSING MODE
	JSR	@CHGMD			; CHANGE MODE
	JSR	@CHGPF			; CHANGE PRINT FORMAT
	CALIOS	#BZMDC			; MODE CHANGE TONE ON
SWPI_1: 				;
	CALMON	#FSPRE			; SET PRINT ENBLE MODE
;	BRA	SWPNOR			;
	.PAGE
;
;	NORMAL MODE
;
SWPNOR: MOV.W	#SWPTB1,R2		; GET NORMAL MODE PANEL SW TABLE
	CALIOS	#DSPSTA 		; START NORAML MODE DISPLAY
SWPN_1: 				;
	SLPTSK				; WAIT PANEL SW INPUT
SWPN_2: CMP.B	#2*3,R1 		;
	BCS	SWPN_4			; BR IF PRINT STOP/PRINT SPEED SW
	JSR	@CHKDP3 		; CHECK DP3 STATUS
	BNE	SWPN_1			; BR IF DP3 ACTIVE
SWPN_3: MOV.B	R1,R2			;
	BMI	SWPN_5			; BR IF FEED SW
SWPN_4: BSR	SWJMP1			; GOTO PANEL SW ENTRY
	BRA	SWN0:16 		;  0  PRINT STOP   SW
	BRA	SWN1:16 		;  1  PRINT SPEED  SW	3
	BRA	SWN2:16 		;  2  PRINT START  SW
	BRA	SWN3:16 		;  3  COPY MODE    SW	4+6	????
	BRA	SWN4:16 		;  4  PAPER MODE   SW	6
	BRA	SWN5:16 		;  5  MODE	   SW	4+1
	BRA	SWN6:16 		;  6  PRINT FORMAT SW	1

;
;	FEED SW
;
SWPN_5: CMP.B	#ZPHMSW+XWACTF,R2	;
	BEQ	SWPN_6			; BR IF NOT FEED SW
	BTST.B	#Q260ER,@ERRF:8 	;
	BNE	SWPN_1			; BR IF SF-260 STACKER ERROR
SWPN_6: TRAPA	#11			; CALL DP3 FOR PANEL SW FEED
	WAIDP3				; WAIT DP3 ACTION END
	BRA	SWPN_1			;

;
;	PRINT START SW
;
SWN0:					;
	CALMON	#FRPRE			; RESET PRINT ENABLE MODE
	BRA	SWN1_2			; CLICK TONE ON

;
;	PRINT SPEED SW
;
SWN1:	MOV.B	@PSPDF:8,R3		; GET PRINT SPEED
	ADD.B	#1,R3			; UPDATE PRINT SPEED
	CMP.B	#ZPS30,R3		;
	BLS	SWN1_1			; BR IF NOT MAX OVER
;    MOV.B   #ZPS10,R3   ;921103 10->15 ;921210 SPEED
    MOV.B   #ZPS15,R3   ; Default Speed is (Panel *) 2000/11/30+SHIN

SWN1_1: MOV.B	R3,@PSPDF:8		; SET NEW PRINT SPEED
	CALIOS	#DSPNOR 		; DISPALY NEW PRINT SPEED
SWN1_2: BSR	SWTONE			; CLICK TONE ON
	BRA	SWPN_1			;
	.PAGE
;
;	PRINT STOP SW
;
SWN2:					;
	CALMON	#FSPRO			; SET PRINT ENABLE MODE
	BTST.B	#QPREM,@MODEF:8 	;
	BEQ	SWPN_1			; BR IF CAN'T MODE CHANGE
	BRA	SWN1_2			; CLICK TONE ON

;
;	COPY MODE SW
;
SWN3:	BNOT.B	#Q7PM,@PRMDF:8		; EXCHANGE COPY ENHANCE MODE
	CALIOS	#DSPCPM 		; DISPLAY NEW COPY MODE
	BRA	SWN1_2			; CLICK TONE ON
	.PAGE
;
;	PAPER MODE SW
;
SWN4:	MOV.B	@PAMDF:8,R3		; GET CURRENT PAPER MODE
	MOV.B	R3,R5			; SAVE PAPER MODE
	CMP.B	#ZACF0,R3		;
	BEQ	SWPN_1			; BR IF SF-260
	BTST.B	#QPE2ER,@ERRF:8 	;
	BNE	SWN4_1			; BR IF NO PAPER
	BTST.B	#Q260ER,@ERRF:8 	;
	BNE	SWPN_1			; BR IF SF-260 STACKER ERROR
SWN4_1: ADD.B	#1,R3			; GET NEXT PAPER MODE
	CMP.B	#ZACF0,R3		;
	BLS	SWN4_2			; BR IF NOT MAX OVER
	MOV.B	#ZFORM,R3		;
SWN4_2: JSR	@CHKPMD 		; CHECK PAPER MODE
	BEQ	SWN4_1			; BR IF INVALID PAPER MODE
	CALIOS	#DSPPAM 		; DISPLAY NEW PAPER MODE
	BSR	SWTONE			; CLICK TONE ON
	MOV.W	#2000/ZTI,R2		;
	WAITSK				; WAIT 2S
	BTST.B	#QDIPR,@PSWDF:8 	;
	BNE	SWN4_4			; BR IF INPUT PRIME
	BTST.B	#QDCVR,@PSWDF:8 	;
	BNE	SWN4_4			; BR IF COVER ERROR
	BTST.B	#QPE2ER,@ERRF:8 	;
	BNE	SWN4_3			; BR IF NO PAPER
	BTST.B	#Q260ER,@ERRF:8 	;
	BNE	SWN4_4			; BR IF SF-260/COVER ERROR
SWN4_3: CMP.B	@PAMDF:8,R5		;
	BNE	SWN4_5			; BR IF PAPER MODE CHANGE BY OTHER
	MOV.B	#ZPPMSW+XWACTF,R2	;
	CMP.B	#ZE_CAL,R0		;
	BNE	SWPN_6			; BR IF 2 SEC. TIME OUT
	CMP.B	#4*3,R1 		;
	BEQ	SWN4_1			; BR IF PAPER MODE SW
	MOV.W	R1,@-SP 		;
	TRAPA	#11			; CALL DP3 FOR PAPER MODE CHANGE
	WAIDP3				; WAIT DP3 ACTION END
	MOV.W	@SP+,R1 		;
	BRA	SWPN_1			;
					;
SWN4_4: MOV.W	R1,@-SP 		;
	MOV.W	R0,@-SP 		;
	MOV.B	@PAMDF:8,R3		; GET CURRENT PAPER MODE
	CALIOS	#DSPPAM 		; DISPLAY NEW PAPER MODE
	MOV.W	@SP+,R0 		;
	MOV.W	@SP+,R1 		;
SWN4_5: CMP.B	#ZE_CAL,R0		;
	BNE	SWPN_1			; BR IF 2 SEC. TIME OUT
	BRA	SWPN_1			;
	.PAGE
;
;	MODE SW
;
SWN5:	MOV.W	#SWPTB2,R2		; GET PANEL SW TABLE POINTER
	LDC.B	#PAGE MGMDM,EP		;
	MOV.W	#MGMDM,R4		; GET MODE MENU MODE TITTLE
	CALIOS	#BZMDC			; MODE CHANGE TONE ON
	CALIOS	#DSPMDC 		; DISPLAY MODE TITLE
;	MOV.B	@UMOD04:8,R3		; 911226+
	MOV.B	#0,R3			;+920427
	LDC.B	#PAGE MLMDM,EP		;
	MOV.W	#MLMDM,R4		; GET MODE MENU MESSAGE LIST
SWN5_1: BSR	SWDSPI:16		; DISPLAY MODE
	SLPTSK				; WAIT PANEL SW INPUT
	BSR	SWJMP			; GOTO PANEL SW ENTRY
	BRA	SWN5_2:16		;  0  NEXT     SW
	BRA	SWN5_3:16		;  1  PREVIOUS SW
	JSR	@CHGMD			;  2  SET SW
	CALIOS	#BZMDC			;  3  FINISH SW
	BRA	SWN7			; 911223
;
SWN5_2: ADD.B	#-1,R3			; SET PREVIOUS MODE
	BCS	SWN5_1			; BR IF NEW < MIN
	MOV.B	#5,R3			; GET MAX ITEM NO.
	BRA	SWN5_1			;
					;
SWN5_3: ADD.B	#1,R3			; SET NEXT MODE
	CMP.B	#5,R3			;
	BLS	SWN5_1			; BR IF NEW =< MAX
	MOV.B	#0,R3			; GET MIN NO.
	BRA	SWN5_1			;
	.PAGE
;
;****************************************
;	IN 911223 LPI CONTROL		*
;****************************************
SWN7:	MOV.W	#SWPTB2,R2		; GET PANEL SW TABLE POINTER
	LDC.B	#PAGE MGMKM,EP		;
	MOV.W	#MGMKM,R4		; GET MODE MENU MODE TITTLE
	CALIOS	#BZMDC			; MODE CHANGE TONE ON
	CALIOS	#DSPMDC 		; DISPLAY MODE TITLE
	MOV.B	@UMOD00:8,R3	 ;	;
	MOV.W	#MLMKM,R4		; GET MODE MENU MESSAGE LIST
SWN7_1: BSR	SWDSPI:16		; DISPLAY MODE
	SLPTSK				; WAIT PANEL SW INPUT
	BSR	SWJMP			; GOTO PANEL SW ENTRY
	BRA	SWN7_2:16		;  0  NEXT     SW
	BRA	SWN7_3:16		;  1  PREVIOUS SW
	JSR	@MDFIX			;  2  SET SW
	CALIOS	#BZMDC			;  3  FINISH SW
	BRA	SWN8			; RETURN TO NORMAL MODE
					;
SWN7_2: ADD.B	#-1,R3			; SET PREVIOUS MODE
	BCS	SWN7_1			; BR IF NEW < MIN
	MOV.B	#06,R3			; GET MAX ITEM NO.
	BRA	SWN7_1			;
					;
SWN7_3: ADD.B	#1,R3			; SET NEXT MODE
	CMP.B	#06,R3			;
	BLS	SWN7_1			; BR IF NEW =< MAX
	MOV.B	#0,R3			; GET MIN NO.
	BRA	SWN7_1			;
	.PAGE
;
;****************************************
;	H/E & UNI/BI-DIRECTION		*
;****************************************
SWN8:	MOV.W	#SWPTB2,R2		; GET PANEL SW TABLE POINTER
	LDC.B	#PAGE MGMKM,EP		;
	MOV.W	#MGMYM,R4		; GET MODE MENU MODE TITTLE
	CALIOS	#BZMDC			; MODE CHANGE TONE ON
	CALIOS	#DSPMDC 		; DISPLAY MODE TITLE
	MOV.B	@UMOD02:8,R3	;	;
	MOV.W	#MLMYM,R4		; GET MODE MENU MESSAGE LIST
SWN8_1: BSR	SWDSPI:16		; DISPLAY MODE
	SLPTSK				; WAIT PANEL SW INPUT
	BSR	SWJMP			; GOTO PANEL SW ENTRY
	BRA	SWN8_2:16		;  0  NEXT     SW
	BRA	SWN8_3:16		;  1  PREVIOUS SW
	JSR	@MDFIX1 		;  2  SET SW
	CALIOS	#BZMDC			;  3  FINISH SW
	BRA	SWN9
					;
SWN8_2: ADD.B	#-1,R3			; SET PREVIOUS MODE
	BCS	SWN8_1			; BR IF NEW < MIN
	MOV.B	#05,R3			; GET MAX ITEM NO.
	BRA	SWN8_1			;
					;
SWN8_3: ADD.B	#1,R3			; SET NEXT MODE
	CMP.B	#05,R3			;
	BLS	SWN8_1			; BR IF NEW =< MAX
	MOV.B	#0,R3			; GET MIN NO.
	BRA	SWN8_1			;
	.PAGE
;****************************************
;	COLOR DEFINE			*
;****************************************
SWN9:	MOV.W	#SWPTB2,R2		; GET PANEL SW TABLE POINTER
	LDC.B	#PAGE MGMZM,EP		;
	MOV.W	#MGMZM,R4		; GET MODE MENU MODE TITTLE
	CALIOS	#BZMDC			; MODE CHANGE TONE ON
	CALIOS	#DSPMDC 		; DISPLAY MODE TITLE
	MOV.B	@UMOD03:8,R3	;	;
	MOV.W	#MLMZM,R4		; GET MODE MENU MESSAGE LIST
SWN9_1: BSR	SWDSPI:16		; DISPLAY MODE
	SLPTSK				; WAIT PANEL SW INPUT
	BSR	SWJMP			; GOTO PANEL SW ENTRY
	BRA	SWN9_2:16		;  0  NEXT     SW
	BRA	SWN9_3:16		;  1  PREVIOUS SW
	JSR	@MDFIX2 		;  2  SET SW
	CALIOS	#BZMDC			;  3  FINISH SW
	BRA	SWPNOR			; RETURN TO NORMAL MODE
					;
SWN9_2: ADD.B	#-1,R3			; SET PREVIOUS MODE
	BCS	SWN9_1			; BR IF NEW < MIN
	MOV.B	#06,R3			; GET MAX ITEM NO.
	BRA	SWN9_1			;
					;
SWN9_3: ADD.B	#1,R3			; SET NEXT MODE
	CMP.B	#06,R3			;
	BLS	SWN9_1			; BR IF NEW =< MAX
	MOV.B	#0,R3			; GET MIN NO.
	BRA	SWN9_1			;
	.PAGE
;****************************************
;
;	PRINT FORMAT MODE
;
SWN6:	MOV.W	#SWPTB2,R2		; GET PANEL SW TABLE POINTER
	MOV.W	#MGPFS,R4		; GET PF SELECT MODE TITLE
	CALIOS	#BZMDC			; MODE CHANGE TONE ON
	BSR	SWMDC1			; CHANGE PANEL SW MODE
	BNE	SWN6_1			; BR IF 1 SEC. TIME OUT
	BSR	SWTONE			; CLICK TONE ON
	CMP.B	#3*3,R1 		; CHECK FINISH SW OR NOT
	BEQ	SWN6_2			; BR IF FINISH SW
SWN6_1: BSR	SWDSPN			; DISPLAY PRINT FORMAT NO.
	BSR	SWVAL:16		; SELECT PRINT FORMAT NO.
	BSR	SWN6_3:16		;  2  SET    SW
SWN6_2: 				;  3  FINISH SW
	CALIOS	#BZMDC			; MODE CHANGE TONE ON
	BRA	SWPNOR			; RETURN TO NORMAL MODE
	;
SWN6_3: MOV.B	R3,@FP			; SET NEW PRINT FORMAT NO.
	CALIOS	#EESAVE 		; SAVE DATA TO EEPROM
	JMP	@CHGPF			; CHANGE PRINT FORMAT
	.PAGE
;
;	CHANGE PANEL SW MODE
;
;	IN	R2 : PANEL SW PROCESS TABLE POINTER
;		R4 : MODE TITLE MESSAGE POINTER
;
;	OUT	R0 : WAKE UP REASON
;		R1 : LOGICAL PANEL SW NO.
;		 Z : 0=TIME OUT
;
SWMDC1: MOV.W	#(29*ZH)+ZLPOS+29,R5	; SET CURSOR POSITION
	BRA	SWMDC3			;

SWMDC2: MOV.W	#ZLPOS+29,R5		; SET CURSOR POSITION
SWMDC3: LDC.B	#PAGE MGPFC,EP		;
	CALIOS	#DSPMDC 		; DISPLAY MODE TITLE
	MOV.W	#1000/ZTI,R2		;
	WAITSK				; WAIT 1 SEC.
	MOV.W	R5,@CURDF:8		; SET BLINK CURSOR DISPLAY MODE
	CMP.B	#ZE_CAL,R0		; CHECK 1 SEC. TIME OUT OR NOT
	RTS				;

;
;	DISPLAY MENU
;
;	IN   EP R4 : MENU MESSAGE POINTER
;
;	OUT	R3 : EEPROM BYTE DATA
;		FP : EEPROM DATA POINTER
;
SWDSPM: 				;
	CALIOS	#DSPMEN 		; DISPLAY MENU
	MOV.W	#EEPBF,FP		; GET EEPROM BUFFER POINTER
	MOV.B	@(-1,R4),FP		; GET EEPROM BUFFER OFFSET
	MOV.B	@FP,R3			; GET CURRENT VALUE
	RTS				;
	.PAGE
;
;	DISPLAY ITEM
;
;	IN	R3 : ITEM NO.	 /VALUE
;	     EP R5 : MESSAGE LIST
;
;	OUT	NONE
;
SWDSPB	MOV.W	R5,R4			; GET ITEM LIST
	MOV.B	@(-2,R4),R0		; GET BIT NO. OF FLAG
	MOV.B	#0,R3			; SET LIST ITEM NO.
	BTST.B	R0,@FP			;
	BEQ	SWDSPI			; BR IF BIT OFF
	MOV.B	#1,R3			;
SWDSPI: 				;
	CALIOS	#DSPLST 		; DISPLAY ITEM
	RTS				;

;
;	DISPLAY VALUE
;
;	IN	R3 : VALUE
;		R5 : DISPLAY ENTRY
;
;	OUT	NONE
;
SWDSPN: MOV.W	#MGPF1,R4		;
	BSR	SWDSPM			; DISPLAY MENU
	MOV.W	#SWDS_2,R5		; SET DISPLAY ENTRY
SWDSPV: JMP	@R5			; DISPLAY VALUE
	;
	.DATA.B ZNPFN,ZXPFN		; MIN, MAX
SWDS_2: MOV.B	#ZLPOS+28,R2		; SET DISPLAY POSITION
	CALIOS	#DSPHX1 		; DISPLAY PRINT FORMAT NO.
	RTS				;
	.PAGE
;
;	ITEM SELECT OPERATION
;
;	IN	R3 : ITEM NO.
;	     EP R4 : MESSAGE LIST
;
;	OUT	R3 : NEW ITEM NO.
;	     EP R4 : NOT CHANGE
;
SWITEM: MOV.B	R3,@SWPVS+1:8		; SAVE CURRENT VALUE
SWIT_1: BCLR.B	#QCURON,@CURDF:8	; SET CURSOR DISPLAY OFF
SWIT_2: 				;
	SLPTSK				; WAIT PANEL SW INPUT
	CMP.B	#1*3,R1 		;
	BEQ	SWIT_3			; BR IF NEXT SW
	SUB.B	#2*3,R1 		;
	BCC	SWIT_5			; BR IF NOT PREVIOUS SW
	ADD.B	#-1,R3			; SET PREVIOUS MODE
	BCS	SWIT_4			; BR IF NEW < MIN
	MOV.B	@(-1,R4),R3		; GET MAX ITEM NO.
	BRA	SWIT_4			;
					;
SWIT_3: ADD.B	#1,R3			; SET NEXT MODE
	CMP.B	@(-1,R4),R3		;
	BLS	SWIT_4			; BR IF NEW =< MAX
	MOV.B	#0,R3			; GET MIN NO.
SWIT_4: BSR	SWTONE			; CLICK TONE ON
	BSR	SWDSPI			; DISPLAY NEW SELECTION
	CMP.B	@SWPVS+1:8,R3		;
	BEQ	SWIT_1			; BR IF SAME VALUE
	BSET.B	#QCURON,@CURDF:8	; SET CURSOR DISPLAY ON
	BRA	SWIT_2			;
					;
SWIT_5: BSR	SWTONE			; CLICK TONE ON
	BCLR.B	#QCURON,@CURDF:8	; SET CURSOR DISPLAY OFF
	CMP.B	#(6-2)*3,R1		;
	BCS	SWJMP1			; BR IF NOT SPECIAL SW
	ADD.W	#2,SP			; ADJUST STACK POINTER
	CMP.B	#(6-2)*3,R1		;
	BEQ	SWP7:16 		; BR IF TOP MARGIN MENU SW
	CMP.B	#(7-2)*3,R1		;
	BEQ	SWP9:16 		; BR IF PAGE LENGTH MENU SW
	CALIOS	#EESAVE 		; SAVE DATA TO EEPROM
	CALDPH	#ZPINI+XWACTF		; CHANGE PAPER MODE
	WAIDP3				; WAIT DP3 ACTION END
	RTS				; EXIT MODE
	.PAGE
;
;	VALUE UP/DOWN OPERATION
;
;	IN	R3 : VALUE
;		R5 : VALUE DISPLAY ENTRY
;
;	OUT	R3 : NEW VALUE
;		R5 : NOT CHANGE
;
SWVAL:	MOV.B	R3,@SWPVS+1:8		; SAVE CURRENT VALUE
SWVA_1: BCLR.B	#QCURON,@CURDF:8	; SET CURSOR DISPLAY OFF
SWVA_2: 				;
	SLPTSK				; WAIT PANEL SW INPUT
	CMP.B	#1*3,R1 		;
	BEQ	SWVA_3			; BR IF DOWN SW
	SUB.B	#2*3,R1 		;
	BCC	SWIT_5			; BR IF NOT UP SW
	CMP.B	@(-1,R5),R3		;
	BCC	SWVA_2			; BR IF MAX =< VALUE
	ADD.B	#1,R3			; COUNT UP VALUE
	BRA	SWVA_4			; CLICK TONE ON
					;
SWVA_3: CMP.B	@(-2,R5),R3		;
	BLS	SWVA_2			; BR IF MIN >= VALUE
	ADD.B	#-1,R3			; COUNT DOWN VALUE
SWVA_4: BSR	SWTONE			; CLICK TONE ON
	BSR	SWDSPV			; DISPLAY NEW VALUE
	CMP.B	@SWPVS+1:8,R3		;
	BEQ	SWVA_1			; BR IF SAME VALUE
	BSET.B	#QCURON,@CURDF:8	; SET CURSOR DISPLAY ON
	BRA	SWVA_2			;
	.PAGE
;
;	POWER ON SPECIAL MENU MODE
;
;	IN	R0 : MODE FLAG
;
;	OUT	NONE
;
SWPPFC: BTST.B	#QSERVM,R0		;
	BNE	SWPSRV			; BR IF SERVICE MODE
	BTST.B	#QSPCM,R0		;
	BNE	SWPSPC:16		; BR IF SPECIFICATION CHANGE MODE
;					; INI + 4
;
;	PRINT FORMAT CHANGE MODE
;					; INI + 1
	MOV.W	#SWPTB3,R2		; GET PANEL SW TABLE
	MOV.W	#MGPFC,R4		; GET MODE TITLE
	BSR	SWMDC2			; CHANGE PANEL SW MODE
	BNE	SWP1			; BR IF 1S TIME OUT
	BSR	SWJMP			; GOTO PANEL SW ENTRY
	BRA	SWP1:16 		;  0  UP/PREVIOUS      SW
	BRA	SWP1:16 		;  1  DOWN/NEXT        SW
	BRA	SWP9:16 		;  2  PREVIOUS	  MENU SW
	BRA	SWP2:16 		;  3  NEXT	  MENU SW
	BRA	SWP3:16 		;  4  GROUP JUMP  MENU SW
	BRA	SWP1:16 		;  5  SET	       SW
	BRA	SWP7:16 		;  6  TOP MARGIN  MENU SW
	BRA	SWP9:16 		;  7  PAGE LENGTH MENU SW
	RTS				;  8  FINISH	       SW

;
;	DISPLAY PRINT FORMAT CHANGE MENU
;
;	IN	R4 : MENU MESSAGE
;
;	OUT	R3 : CURRENT VALUE
;		FP : EEPROM BUFFER POINTER
;
SWPPFN: BSR	SWDSPM			; DISPLAY MENU
	MOV.B	#ZLPOS+30,R2		; GET DISPLAY POSITION
	MOV.B	@EEPBF+E2PFN,R3 	; GET PRINT FORMAT NO.
	CALIOS	#DSPHX1 		; DISPLAY PRINT FORMAT NO.
	ADD.B	#-1,R3			;
	MULXU.B #E2PFSZ,R3		; CALCULATE PRINT FORMAT POINTER
	ADD.B	R3,FP			;
	MOV.B	@FP,R3			; GET CURRENT VALUE
	RTS				;
	.PAGE
;
;	PRINT FORMAT NO. MENU
;
SWP1:	BSR	SWDSPN			; DISPLAY PRINT FORMAT NO.
SWP1_1: BSR	SWVAL			; SELECT PRINT FORMAT NO.
	BRA	SWP9:16 		;  2  PREVIOUS MENU SW
	BRA	SWP2:16 		;  3  NEXT     MENU SW
	BRA	SWP3:16 		;  4  GROUP JUMP    SW
	MOV.B	R3,@FP			;  5  SET	    SW
	BRA	SWP1_1			;

;
;	PRINT FORMAT CLEAR
;
SWP2:	MOV.W	#MGPF2,R4		;
	BSR	SWPPFN			; DISPLAY MENU
	MOV.B	#0,R3			; SELECT NO
	MOV.W	#MLPF2,R4		;
SWP2_1: BSR	SWDSPI			; DISPLAY YES/NO
	BSR	SWITEM			; SELECT YES/NO
	BRA	SWP1:16 		;  2  PREVIOUS MENU SW
	BRA	SWP3:16 		;  3  NEXT     MENU SW
	BRA	SWP3:16 		;  4  GROUP JUMP    SW
	TST.B	R3			;  5  SET	    SW
	BEQ	SWP2_1			; BR IF NO
	MOV.W	FP,R1			;
	MOV.W	FP,R2			; GET PRINT FORMAT POINTER
	SUB.W	#EEPBF,R1		;
	ADD.W	#EEPTB,R1		; GET DEFAULT PRINT FORMAT POINTER
	MOV.W	#E2PFSZ/2-1,R3		;
SWP2_2: MOV.W	@R1+,R0 		; COPY DEFAULT PRINT FORMAT
	MOV.W	R0,@R2+ 		;
	SCB/F	R3,SWP2_2		;
	CLR.W	R3			; RETURN TO NO
	BRA	SWP2_1			;
	.PAGE
;
;	POWER ON PAPER MODE
;
SWP3:	MOV.W	#MGPF3,R4		;
	BSR	SWPPFN			; DISPLAY MENU
	MOV.W	#MLPF3,R4		;
	BSR	SWDSPI			; DISPLAY PAPER MODE
SWP3_1: BSR	SWITEM			; SELECT PAPER MODE
	BRA	SWP2:16 		;  2  PREVIOUS MENU SW
	BRA	SWP4:16 		;  3  NEXT     MENU SW
	BRA	SWP6:16 		;  4  GROUP JUMP    SW
	MOV.B	R3,@FP			;  5  SET	    SW
	BRA	SWP3_1			;

;
;	CHARACTER SIZE
;
SWP4:	MOV.W	#MGPF4,R4		;
	BSR	SWPPFN			; DISPLAY MENU
	ADD.B	#-ZNCHSZ,R3		; CONVERT TO LIST NO.
	MOV.W	#MLPF4,R4		;
	BSR	SWDSPI			; DISPLAY CHARCTER SIZE
SWP4_1: BSR	SWITEM			; SELECT CHARCTER SIZE
	BRA	SWP3:16 		;  2  PREVIOUS MENU SW
	BRA	SWP5:16 		;  3  NEXT     MENU SW
	BRA	SWP6:16 		;  4  GROUP JUMP    SW
	MOV.B	R3,R0			;  5  SET	    SW
	ADD.B	#ZNCHSZ,R0		;
	MOV.B	R0,@FP			; SET NEW CHARACTER SIZE
	BRA	SWP4_1			;

;
;	KANJI PITCH
;
SWP5:	MOV.W	#MGPF5,R4		;
	BSR	SWPPFN			; DISPLAY MENU
	MOV.W	#SWP5_2,R5		; GET DISPLAY ENTRY
	BSR	SWDSPV			; DISPLAY KANJI PITCH
SWP5_1: BSR	SWVAL			; SELECT KANJI PITCH
	BRA	SWP4:16 		;  2  PREVIOUS MENU SW
	BRA	SWP6:16 		;  3  NEXT     MENU SW
	BRA	SWP6:16 		;  4  GROUP JUMP    SW
	MOV.B	R3,@FP			;  5  SET	    SW
	BRA	SWP5_1			;
	;
	.DATA.B ZNKJCP,ZXKJCP		; MIN, MAX
SWP5_2: MOV.B	#ZLPOS+24,R2		;
	CALIOS	#DSPKCP 		; DISPLAY KANJI PITCH
	RTS				;
	.PAGE
;
;	BOTTOM MARGIN
;
SWP6:	MOV.W	#MGPF6,R4		;
	BSR	SWPPFN			; DISPLAY MENU
	MOV.W	#SWP6_2,R5		; GET DISPLAY ENTRY
	BSR	SWDSPV			; DISPLAY BOTTOM MARGIN
SWP6_1: BSR	SWVAL			; SELECT BOTTOM MARGIN
	BRA	SWP5:16 		;  2  PREVIOUS MENU SW
	BRA	SWP7:16 		;  3  NEXT     MENU SW
	BRA	SWP9:16 		;  4  GROUP JUMP    SW
	MOV.B	R3,@FP			;  5  SET	    SW
	BRA	SWP6_1			;
	;
	.DATA.B ZNBTM,ZXBTM		; MIN, MAX
SWP6_2: MOV.W	#MLPF6,R4		;
	CALIOS	#DSPLST 		; DISPLAY BOTTOM MARGIN
	RTS				;
	.PAGE
;
;	TOP MARGIN
;
SWP7:	MOV.W	#MGPF7,R4		; FORMS
	BRA	SWP7X			;
					;
SWP7A:	MOV.W	#MGPF7A,R4		; SHEET
	BRA	SWP7X			;
					;
SWP7B:	MOV.W	#MGPF7B,R4		; ACSF0
	BRA	SWP7X			;
					;
SWP7C:	MOV.W	#MGPF7C,R4		; ACSF1
	BRA	SWP7X			;
					;
SWP7D:	MOV.W	#MGPF7D,R4		; ACSF2
	BRA	SWP7X			;
					;
SWP7E:	MOV.W	#MGPF7E,R4		; ACSF3
SWP7X:	BSR	SWPPFN			; DISPLAY MENU
	SUB.B	#ZNTOP,R3		; CONVERT TO LIST NO.
	MOV.W	#SWP7_2,R5		; SET DISPLAY ENTRY
	BSR	SWDSPV			; DISPLAY TOP MARGIN
SWP7_1: BSR	SWVAL			; SELECT TOP MARGIN
	BRA	SWP7_3:16		;  2  PREVIOUS MENU SW
	BRA	SWP7_4:16		;  3  NEXT     MENU SW
	BRA	SWP9:16 		;  4  GROUP JUMP    SW
	MOV.B	R3,R0			;  5  SET	    SW
	ADD.B	#ZNTOP,R0		;
	MOV.B	R0,@FP			; SET NEW TOP MARGIN
	BRA	SWP7_1			;
	;
	.DATA.B   0,ZXTOP-ZNTOP 	; OFFSET, MIN, MAX
SWP7_2: MOV.W	R4,@-SP 		;
	MOV.W	#MLPF7,R4		;
	CALIOS	#DSPLST 		; DISPLAY TOP MARGIN
	MOV.W	@SP+,R4 		;
	RTS				;
					;
SWP7_3: MOV.B	#0,R1			;
	BRA	SWP7_5			;
					;
SWP7_4: MOV.B	#2,R1			;
SWP7_5: MOV.B	@(-1,R4),R4		; GET EEPROM OFFSET
	SUB.B	#E2PFTB+E2TOPF+1,R4	;
	SHLR.B	R4			;
	ADD.B	R4,R1			; GET JUMP OFFSET
	MULXU.B #3,R1			;
	BSR	SWJMP1			; GOTO PREV/NEXT MENU
	BRA	SWP6:16 		;
	BRA	SWP7:16 		;
	BRA	SWP7A:16		;
	BRA	SWP7B:16		;
	BRA	SWP8:16 		;
	BRA	SWP7D:16		;
	BRA	SWP7E:16		;
;	BRA	SWP8			;
	.PAGE
;
;	TEAR OFF
;
SWP8:	MOV.W	#MGPF8,R4		;
	MOV.W	#MLPF8,R5		;
	BSR	SWPPFN			; DISPLAY MENU
	BSR	SWDSPB			; DISPLAY TEAR OFF SELECTION
SWP8_1: BSR	SWITEM			; SELECT TEAR OFF
	BRA	SWP7B:16		;  2  PREVIOUS MENU SW
	BRA	SWP9:16 		;  3  NEXT     MENU SW
	BRA	SWP9:16 		;  4  GROUP JUMP    SW
	BSR	SWSETB			;  5  SET	    SW
	BRA	SWP8_1			;
	;
SWSETB: MOV.B	@(-2,R4),R0		; GET BIT NO. OF FLAG
	TST.B	R3			;
	BEQ	SWSE_1			; BR IF FLAG RESET
	BSET.B	R0,@FP			; SET FLAG
	RTS				;
					;
SWSE_1: BCLR.B	R0,@FP			; RESET FLAG
	RTS				;
	.PAGE
;
;	PAGE LENGTH
;
SWP9:	MOV.W	#MGPF9,R4		;
	BSR	SWPPFN			; DISPLAY MENU
	MOV.W	#SWP9_2,R5		; GET DISPLAY ENTRY
	BSR	SWDSPV			; DISPLAY PAGE LENGTH
SWP9_1: BSR	SWVAL			; SELECT PAGE LENGTH
	BRA	SWP8:16 		;  2  PREVIOUS MENU SW
	BRA	SWP1:16 		;  3  NEXT     MENU SW
	BRA	SWP1:16 		;  4  GROUP JUMP    SW
	MOV.B	R3,@FP			;  5  SET	    SW
	BRA	SWP9_1			;
	;
	.DATA.B ZNPGL,ZXPGL		; MIN, MAX
SWP9_2: MOV.W	#MLPF6,R4		;
	CALIOS	#DSPLST 		; DISPLAY PAGE LENGTH
	RTS				;

;
;	FORMS WIDTH
;
SWPA:	MOV.W	#MGPFA,R4		;
	BSR	SWPPFN			; DISPLAY MENU
	MOV.W	#SWPA_2,R5		; GET DISPLAY ENTRY
	BSR	SWDSPV			; DISPLAY FORMS WIDTH
SWPA_1: BSR	SWVAL			; SELECT PAGE LENGTH
	BRA	SWP9:16 		;  2  PREVIOUS MENU SW
	BRA	SWP1:16 		;  3  NEXT     MENU SW
	BRA	SWP1:16 		;  4  GROUP JUMP    SW
	MOV.B	R3,@FP			;  5  SET	    SW
	BRA	SWPA_1			;
	;
	.DATA.B ZNWDF,ZXWDF		; MIN, MAX
SWPA_2: MOV.W	#MLPFA,R4		;
	CALIOS	#DSPLST 		; DISPLAY PAGE LENGTH
	RTS				;
	.PAGE
;
;	SPECIFICATION CHANGE MODE
;
SWPSPC: MOV.W	#SWPTB4,R2		; INI + 4
	MOV.W	#MGSPC,R4		; GET SPECIFICATION CHANGE MODE TITLE
	BSR	SWMDC2			; CHAMNGE PANEL MODE
	BNE	SWS1			; BR IF 1S TIME OUT
	BSR	SWJMP			; GOTO PANEL SW ENTRY
	BRA	SWS1:16 		;  0  UP/PREVIOUS      SW
	BRA	SWS1:16 		;  1  DOWN/NEXT        SW
	BRA	SWS8:16 		;  2  PREVIOUS	  MENU SW
	BRA	SWS2:16 		;  3  NEXT	  MENU SW
	BRA	SWS2:16 		;  4  GROUP JUMP  MENU SW
	BRA	SWS1:16 		;  5  SET	       SW
	BRA	SWPS_1:16		;  6
	BRA	SWPS_1:16		;  7
SWPS_1: RTS				;  8  FINISH	       SW

;
;	LCD CONTRAST
;
SWS1:	MOV.W	#MGSP1,R4		;
	BSR	SWDSPM			; DISPLAY MENU
	MOV.W	#SWS1_2,R5		; GET DISPLAY ENTRY
	BSR	SWDSPV			; DISPALY LCD CONTRAST
SWS1_1: BSR	SWVAL			; SELECT LCD CONTRAST
	BRA	SWS8:16 		;  2  PREVIOUS MENU SW
	BRA	SWS2:16 		;  3  NEXT     MENU SW
	BRA	SWS2:16 		;  4  GROUP JUMP    SW
	MOV.B	R3,@FP			;  5  SET	    SW
	CALIOS	#LCDCON 		; SET LCD CONTRAST
	BRA	SWS1_1			;
	;
	.DATA.B ZNCON,ZXCON		; MIN, MAX
SWS1_2: MOV.B	#ZLPOS+27,R2		;
	CALIOS	#DSPDE2 		; DISPLAY LCD CONTRAST
	RTS				;
	.PAGE
;
;	CHARACTER SET
;
SWS2:	MOV.W	#MGSP2,R4		;
	MOV.W	#MLSP2,R5		;
	BRA	SWS2X			;

;
;	AUTO LF
;
SWS2A:	MOV.W	#MGSP2A,R4		;
	MOV.W	#MLSP2A,R5		;
SWS2X:	BSR	SWDSPM			; DISPLAY MENU
	BSR	SWDSPB			; DISPLAY BIT STATUS
SWS2_1: BSR	SWITEM			; SELECT CHARACTER SET
	BRA	SWS2_2:16		;  2  PREVIOUS MENU SW
	BRA	SWS2_3:16		;  3  NEXT     MENU SW
	BRA	SWS3:16 		;  4  GROUP JUMP    SW
	BSR	SWSETB			;  5  SET	    SW
	BRA	SWS2_1			;
					;
SWS2_2: MOV.B	#0,R1			;
	BRA	SWS2_4			;
					;
SWS2_3: MOV.B	#2,R1			;
SWS2_4: ADD.B	@(-3,R4),R1		; GET JUMP TABLE OFFSET
	MULXU.B #3,R1			;
	BSR	SWJMP1			; GOTO PREV/NEXT MENU
	BRA	SWS1:16 		;
	BRA	SWS2:16 		;
	BRA	SWS2A:16		;
	BRA	SWS3			;
;	BRA	SWS7:16 		; 911213
	.PAGE
;
SWS3:	LDC.B	#PAGE MGSP3,EP		; +920427 EMUL MODE SAVE.
	MOV.W	#MGSP3,R4		;
	BSR	SWDSPM			; DISPLAY MENU
	LDC.B	#PAGE MLSP3,EP		;
	MOV.W	#MLSP3,R4		;
	BSR	SWDSPI			;
SWS3_1: BSR	SWITEM			; SELECT
	BRA	SWS2A:16		;  2  PREVIOUS MENU SW
	BRA	SWS7:16 		;  3  NEXT     MENU SW
	BRA	SWS7:16 		;  4  GROUP JUMP    SW
	MOV.B	R3,@FP			;  5  SET	    SW
	BRA	SWS3_1			;
	.PAGE
;;
;;	 SERIAL PARITY
;;
;SWS4:	 MOV.W	 #MGSP4,R4		 ;
;	 BSR	 SWDSPM 		 ; DISPLAY MENU
;	 AND.B	 #H'03,R3                ; GET PARITY
;	 MOV.W	 #MLSP5,R4		 ;
;	 BSR	 SWDSPI 		 ; DISPALY PARITY
;SWS4_1: BSR	 SWITEM 		 ; SELECT PARITY
;	 BRA	 SWS4:16		 ;  2  PREVIOUS MENU SW
;	 BRA	 SWS5:16		 ;  3  NEXT	MENU SW
;	 BRA	 SWS7:16		 ;  4  GROUP JUMP    SW
;	 MOV.B	 @FP,R0 		 ;  5  SET	     SW
;	 AND.B	 #ZN-H'03,R0             ;
;	 OR.B	 R3,R0			 ;
;	 MOV.B	 R0,@FP 		 ; SET NEW PARITY
;	 BRA	 SWS4_1 		 ;
;
;;
;;	 SERIAL STOP BIT
;;
;SWS5:	 MOV.W	 #MGSP5,R4		 ;
;	 BSR	 SWDSPM 		 ; DISPLAY MENU
;	 AND.B	 #H'0C,R3                ; GET STOP BIT
;	 SHLR.B  R3			 ;
;	 SHLR.B  R3			 ;
;	 MOV.W	 #MLSP5,R4		 ;
;	 BSR	 SWDSPI 		 ; DISPALY STOP BIT
;SWS5_1: BSR	 SWITEM 		 ; SELECT STOP BIT
;	 BRA	 SWS4:16		 ;  2  PREVIOUS MENU SW
;	 BRA	 SWS6:16		 ;  3  NEXT	MENU SW
;	 BRA	 SWS7:16		 ;  4  GROUP JUMP    SW
;	 MOV.B	 R3,R1			 ;  5  SET	     SW
;	 SHLL.B  R1			 ;
;	 SHLL.B  R1			 ;
;	 MOV.B	 @FP,R0 		 ;
;	 AND.B	 #ZN-H'0C,R0             ;
;	 OR.B	 R1,R0			 ;
;	 MOV.B	 R0,@FP 		 ; SET NEW STOP BIT
;	 BRA	 SWS5_1 		 ;
;	 .PAGE
;;
;;	 SERIAL XON/XOFF
;;
;SWS6:	 MOV.W	 #MGSP6,R4		 ;
;	 MOV.W	 #MLSP6,R5		 ;
;	 BRA	 SWS6X			 ;
;
;;
;;	 SERIAL BIT LENGTH
;;
;SWS6A:  BTST.B  #QSIFM,@OPTF:8 	 ;
;	 BEQ	 SWS2A:16		 ; BR IF NOT SIF MODE
;	 MOV.W	 #MGSP6A,R4		 ;
;	 MOV.W	 #MLSP6A,R5		 ;
;SWS6X:  BSR	 SWDSPM 		 ; DISPLAY MENU
;	 BSR	 SWDSPB 		 ; DISPLAY BIT STATUS
;SWS6_1: BSR	 SWITEM 		 ; SELECT CHARACTER SET
;	 BRA	 SWS6_2:16		 ;  2  PREVIOUS MENU SW
;	 BRA	 SWS6_3:16		 ;  3  NEXT	MENU SW
;	 BRA	 SWS7:16		 ;  4  GROUP JUMP    SW
;	 BSR	 SWSETB 		 ;  5  SET	     SW
;	 BRA	 SWS6_1 		 ;
;					 ;
;SWS6_2: MOV.B	 #0,R1			 ;
;	 BRA	 SWS6_4 		 ;
;					 ;
;SWS6_3: MOV.B	 #2,R1			 ;
;SWS6_4: ADD.B	 @(-3,R4),R1		 ; GET JUMP TABLE OFFSET
;	 MULXU.B #3,R1			 ;
;	 BSR	 SWJMP1 		 ; GOTO PREV/NEXT MENU
;	 BRA	 SWS5:16		 ;
;	 BRA	 SWS6:16		 ;
;	 BRA	 SWS6A:16		 ;
;;	 BRA	 SWS7			 ;
;	 .PAGE
;

;	HEAD SHIFT FIX/AUTO MODE
;
SWS7:	MOV.W	#MGSP7,R4		;
	MOV.W	#MLSP7,R5		;
	BRA	SWS7X			;
					;
;
;	RIBBON TYPE
;
SWS7A:	MOV.W	#MGSP7A,R4		;
	MOV.W	#MLSP7A,R5		;
	BRA	SWS7X			;
					;
;
;	HEAD SHIFT AUTO/MANUAL MODE
;
SWS7B:	MOV.W	#MGSP7B,R4		;
	MOV.W	#MLSP7B,R5		;
	BRA	SWS7X			;
					;
;
;	ACSF HEAD SHIFT MODE
;
SWS7C:	MOV.W	#MGSP7C,R4		;
	MOV.W	#MLSP7C,R5		;
	BRA	SWS7X			;
					;
;
;	COPY MODE
;
SWS7D:	MOV.W	#MGSP7D,R4		;
	MOV.W	#MLSP7D,R5		;
	BRA	SWS7X			;

;
;	SHEET TYPE
;
SWS7E:	MOV.W	#MGSP7E,R4		;
	MOV.W	#MLSP7E,R5		;
	BRA	SWS7X			;

;
;	SF-261 CUT POSITION
;
SWS7F:	MOV.W	#MGSP7F,R4		;
	MOV.W	#MLSP7F,R5		;
SWS7X:	BSR	SWDSPM			; DISPLAY MENU
	BSR	SWDSPB			; DISPLAY BIT STATUS
SWS7_1: BSR	SWITEM			; SELECT CHARACTER SET
	BRA	SWS7_2:16		;  2  PREVIOUS MENU SW
	BRA	SWS7_3:16		;  3  NEXT     MENU SW
	BRA	SWS1:16 		;  4  GROUP JUMP    SW
	BSR	SWSETB			;  5  SET	    SW
	BRA	SWS7_1			;
					;
SWS7_2: MOV.B	#0,R1			;
	BRA	SWS7_4			;
					;
SWS7_3: MOV.B	#2,R1			;
SWS7_4: ADD.B	@(-3,R4),R1		; GET JUMP TABLE OFFSET
	MULXU.B #3,R1			;
	BSR	SWJMP1			; GOTO PREV/NEXT MENU
	BRA	SWS2A:16		; 911213
;1213	BRA	SWS6A:16		;
	BRA	SWS7:16 		;
	BRA	SWS7A:16		;
	BRA	SWS7B:16		;
	BRA	SWS7C:16		;
	BRA	SWS7D:16		;
	BRA	SWS7E:16		;
	BRA	SWS7F:16		;
	BRA	SWS8			;
	.PAGE
;
;	PRINT POSITION ADJUST
;
SWS8:	MOV.W	#MGSP8,R4		;
	BSR	SWDSPM			; DISPLAY MENU
	ADD.B	#ZXPRA,R3		; CONVERT TO LIST NO.
	MOV.W	#SWS8_2,R5		; GET DISPLAY ENTRY
	BSR	SWDSPV			; DISPALY PRINT ADJUST VALUE
SWS8_1: BSR	SWVAL			; SELECT PRINT ADJUST VALUE
	BRA	SWS7F:16		;  2  PREVIOUS MENU SW
	BRA	SWS1:16 		;  3  NEXT     MENU SW
	BRA	SWS1:16 		;  4  GROUP JUMP    SW
	MOV.B	R3,R0			;  5  SET	    SW
	SUB.B	#ZXPRA,R0		;
	MOV.B	R0,@FP			; SET NEW VALUE
	CALIOS	#SCIPAJ 		; SET PRINT POSITION ADJUST
	MOV.B	#3,R0			;
	JSR	@REQTP			; REQUEST TEST PRINT
	BRA	SWS8_1			;
	;
	.DATA.B   0,ZXPRA*2		; MIN, MAX
SWS8_2: MOV.W	#MLSP8,R4		;
	CALIOS	#DSPLST 		; DISPLAY PRINT ADJUST VALUE
	RTS				;
	.END
