	.PROGRAM	sysini
	.HEADING	"M4324 SYSTEM INITIALIZE MODULE"
	.LIST		NOCOND,NOEXP
;********************************************************
;							*
;	M4324 SYSTEM INITIALIZE MODULE			*
;							*
;	FILE NAME	SYSINI.MAR			*
;	CREATED 	 6/MAR/1991			*
;							*
;********************************************************
;
	.EXPORT 	RESET, NMI
	.EXPORT 	INTERR,PRGERR,SYS$ERR
	.EXPORT 	INIEX1,INIEX2,INIEX3,INIEX4,INIRAM
	.EXPORT 	INIPBF,CHKOCG,CHKSCG

	.IMPORT 	SYS$TBL
	.IMPORT 	ROMSUM,ROMSIZ,SCGSUM,OCGSUM
	.IMPORT 	STDCG, OPTCG, EXRAM1,EXRAM2,PRTBF
	.IMPORT 	CHKROM,CHKCG, CHKRAM,CLRBF, CLRBFW
	.IMPORT 	INTFER,INIPNL,LCDCHR,LCDHX1
	.IMPORT 	ZWRMD, ZIFPA, ZIFPB, ZCTRL

	.INCLUDE	"COMMON.H"
	.INCLUDE	"M43RTM.H"
	.INCLUDE	"ALARM.H"
	.INCLUDE	"GAHEAD.H"
	.INCLUDE	"GAPNL.H"
	.INCLUDE	"GAINT.H"
	.INCLUDE	"GAIFP.H"
	.INCLUDE	"GAIOP.H"
	.INCLUDE	"CPUIO.H"
	.INCLUDE	"ADCNV.H"
	.PAGE
	.SECTION	SYS1,CODE,ALIGN=16
;
;	POWER ON RESET	(COLD START)
;
RESET:	LDC.B	#0,TP			; SET TP
	MOV.W	#H'FF80,SP              ; SET TEMPORARY STACK
	LDC.B	#0,DP			; SET DP
	LDC.B	#0,EP			; SET EP
	LDC.B	#ZBR,BR 		; SET BR
	BSET.B	#QROMC,@IFPOTB		; LATCH ROM SELECT
	MOV.B	#XIRQ0E,@IRQCR		; SET IRQ0 ENABLE
	MOV.B	#XWMS1+XWMS0+XWC0,@WCR	; SET AUTO WAIT MODE
	MOV.B	#XRAME,@RAMCR		; ENABLE INTERNAL RAM
	MOV.B	#XEECK+XMPDN+XEECS,@P5DR; SET P5 INITIAL VALUE
	MOV.B	#XPHI+XEEDI+XEECK+XMPDN+XEECS,@P5DDR
	MOV.B	#XBZON+XMDVS,@P7DR	; SET P7 INITIAL VALUE
	MOV.B	#XPHIOE+XTXD1+XA19+XBZON+XMDVS,@P7DDR
	MOV.B	#XADST+XSCAN+XCH1+XCH0,@ADCSR
	MOV.B	#ZIFPA,@IFPOTA		; SET I/F PORT A
	MOV.B	#ZIFPB,R0		;
	BSET.B	#QSWPR,R0		; SET PANEL LSI RESET OFF
	MOV.B	R0,@IFPOTB		; SET I/F PORT B
	MOV.B	#XMARE,@EXPNDB		; SET SLAVE CPU I/F LINE, FAN ON
	MOV.B	#XINSWT,@EXPNDC 	; SET PANEL LSI WAIT MODE
	MOV.B	#H'00,@SWPDBC           ; RESET LCD CONTROL LINE
	MOV.B	#H'00,@SWPDBE           ; TURN ON LED
	MOV.B	#ZLCDAJ,@SWPDBF 	; RESET LCD CONTRAST
	MOV.B	#ZWRMD,@SWPCNT		; SET PANEL LSI I/O MODE
	MOV.B	#H'00,@INTMSK           ; SET GA INTERRUPT DISABLE
	MOV.B	#ZCTRL,@CTRL		; SET PRINT BUFFER RAM CONTROL
	MOV.W	#ZNN,R0 		;
	MOV.W	#H'FF80,R1              ; SET INTERNAL END ADDRESS
	MOV.W	#(H'FF80-H'FE00)/2-1,R5 ; SET LOOP COUNT
RESE_1: MOV.W	R0,@-R1 		; CHECK INTERNAL RAM (FE00 -> FF7F)
	CMP.W	@R1,R0			;
	BNE	DEAD			; BR IF INTERNAL RAM ERROR
	CLR.W	@R1			; CLEAR INTERNAL RAM (FE00 -> FF7F)
	TST.W	@R1			;
	SCB/NE	R5,RESE_1		;
	BNE	DEAD			; BR IF INTERNAL RAM ERROR
	JSR	@INIPNL 		; INITIALIZE PANEL
	MOV.B	@ROMSUM,R1		; GET ROM CHECK SUM VALUE
	MOV.B	@ROMSIZ,R2		; GET ROM SIZE
;-sim   JSR     @CHKROM                 ; CHECK PROGRAM ROM
;-s     CMP.W   R1,R2                   ; 920117
;-s     BNE     ROMCPE                  ; 920117
;	BNE	ROMERR			; BR IF ROM ERROR
	LDC.B	#0,EP			; SET 0 PAGE
	MOV.W	#H'8000,R4              ; SET RAM START ADDRESS
	MOV.W	#H'FE00-H'8000,R5       ; SET RAM SIZE
	JSR	@CHKRAM 		; CHECK 0 PAGE RAM (8000 -> FDFF)
	BNE	RAMERR			; BR IF 0 PAGE RAM ERROR
	JSR	@CLRBFW 		; CLEAR 0 PAGE RAM
	LDC.B	#PAGE SYS$TBL,EP	;
	MOV.W	#SYS$TBL,R4		; GET RTM SYSTEM CONFIGULATION TABLE
	MOV.B	@-R4,R3 		; GET MAX TASK PRIORITY
	MOV.B	@-R4,R1 		; GET SYSTEM TIMER CLOCK
	MOV.W	@-R4,R2 		; GET SYSTEM TIMER INTERVAL
	INIRTM				; INITIALIZE REAL TIME MONITOR
;	BRA	SYS$ERR 		;
	.PAGE
;
;	PROGRAM/RAM/ROM ALARM ERROR
;
;	IN	NONE
;
;	OUT	NONE
;
SYS$ERR:				;
	SWAP	R0			; SAVE RTM ERROR CODE
	MOV.B	#ZEPRG,R0		; SET PROGRAM ERROR OCDE
	BRA	ROMER1			;

INTERR: MOV.W	#ZEINT,R0		; SET INTERRUPT ERROR CODE
	BRA	ROMER1			;

PRGERR: MOV.W	#ZEPRG,R0		; SET PROGRAM ERROR CODE
	BRA	ROMER1			;

RAMERR: MOV.W	#ZERAM,R0		; SET RAM ERROR CODE
	BRA	ROMER1			;

ROMCPE: MOV.W	#150,R0 		; 920117
	BRA	ROMER1			; 920117

ROMERR: MOV.W	#ZEROM,R0		; SET ROM ERROR CODE
ROMER1: LDC.W	#XI2+XI1+XI0,SR 	; DISABLE INETRRUPT
	LDC.B	#0,DP			;
	MOV.B	#XWMS1+XWMS0+XWC0,@WCR	; SET AUTO WAIT MODE
	BSET.B	#QMDVS,@P7DR		; CUT OFF P5V
	JSR	@INTFER 		; INVOKE USER FAITAL ERROR INTERRUPT
DEAD:	BSET.B	#QFANC,@EXPNDB		; STOP COOLING FAN
	MOV.B	#ZN,R2			;
	BCLR.B	#QLED9,@SWPDBF		; TURN ON LED9
DEAD_1: NOT.B	R2			;
	MOV.B	R2,@SWPDBE		; BLINK ALL LED
	BNOT.B	#QLED9,@SWPDBF		;
	MOV.W	#400-1,R0		; DELAY 400mS
DEAD_2: MOV.W	#416-1,R1		;
DEAD_3: NOP				;
	SCB/F	R1,DEAD_3		;
	SCB/F	R0,DEAD_2		;
	BRA	DEAD_1			;

;
;	POWER FAILURE
;
NMI:	LDC.B	#0,DP			;
	BSET.B	#QSNMI,@EXPNDB		; OUTPUT NMI SIGNAL TO SLAVE CPU
	BSET.B	#QEECS,@P5DR		; DESELECT AND RESET EEPROM
NMI_1:	BRA	NMI_1			;
	.PAGE
;
;	INITIALIZE EXPAND RAM
;
;	IN	DP : 0
;
;	OUT	NONE
;
INIEX1: BCLR.B	#QEXA17,@EXPNDB 	; SELECT EXPAND RAM PAGE 1
	BCLR.B	#QEXA18,@EXPNDB 	;
	BRA	INIEXR			;
					;
INIEX2: BSET.B	#QEXA17,@EXPNDB 	; SELECT EXPAND RAM PAGE 2
	BCLR.B	#QEXA18,@EXPNDB 	;
	BRA	INIEXR			;
					;
INIEX3: BCLR.B	#QEXA17,@EXPNDB 	; SELECT EXPAND RAM PAGE 3
	BSET.B	#QEXA18,@EXPNDB 	;
	BRA	INIEXR			;
					;
INIEX4: BSET.B	#QEXA17,@EXPNDB 	; SELECT EXPAND RAM PAGE 4
	BSET.B	#QEXA18,@EXPNDB 	;
INIEXR: LDC.B	#PAGE EXRAM1,EP 	; INITIALIZE EXPAND RAM 1
	BSR	INIE_1			;
	LDC.B	#PAGE EXRAM2,EP 	; INITIALIZE EXPAND RAM 2
INIE_1: CLR.W	R4			; SET EXPAND RAM START POINTER
	CLR.W	R5			; SET EXPAND RAM SIZE
;	BRA	INIRAM			; INITIALIZE EXPAND RAM

;
;	INITIALIZE EXTERNAL RAM
;
;	IN   EP R4 : RAM START POINTER
;		R5 : RAM SIZE
;
;	OUT	NONE
;
INIRAM: JSR	@CHKRAM 		; CHECK EXTERNAL RAM
	BNE	INIR_E			; BR IF EXTERNAL RAM ERROR
INIR_1: JMP	@CLRBFW 		; CLEAR EXTERNAL RAM

INIR_E: MOV.B	#XWMS1+XWMS0+XWC0,@WCR	; SET AUTO WAIT MODE
	SETALM	#ZERAM			; SET RAM ERROR CODE
	RTS				;
	.PAGE
;
;	INITIALIZE PRINT BUFFER RAM
;
;	IN	R5 : PRINT BUFFER RAM SIZE
;		DP : 0
;
;	OUT	NONE
;
INIPBF: LDC.B	#PAGE PRTBF,EP		; SET PRINT BUFFER RAM PAGE
	BSET.B	#QRAMS,@CTRL		; SELECT PRINT BUFFER RAM B
	MOV.W	R5,@-SP 		;
	BSR	INIP_1			; CHECK AND CLEAR PRINT BUFFER RAM B
	MOV.W	@SP+,R5 		;
	BCLR.B	#QRAMS,@CTRL		; SELECT PRINT BUFFER RAM A
	BSR	INIP_1			; CHECK AND CLEAR PRINT BUFFER RAM A
	BSET.B	#QCTRS,@CTRL		; RESET DOT COUNTER
	RTS				;
	;
INIP_1: MOV.W	#H'8000,R4              ; SET RAM START ADDRESS
	MOV.B	#XWC0,@WCR		; SET PROGRAMABLE WAIT MODE
	JSR	@CHKRAM 		; CHECK PRINT BUFFER RAM
	BNE	INIR_E			; BR IF PRINT BUFFER RAM ERROR
	MOV.B	#XWMS1+XWMS0+XWC0,@WCR	; SET AUTO WAIT MODE
	JMP	@CLRBF			; CLRAE PRINT BUFFER RAM
	.PAGE
;
;	CHECK STANDARD/OPTION CG
;
;	IN	R2 : CG BANK DISPLAY POSITION
;		FP : LCD BUFFER POINTER
;		DP : 0
;
;	OUT	NONE
;
CHKOCG: MOV.W	#OCGSUM,R0		; SET OPTION CG CHECK SUM TABLE
	LDC.B	#PAGE OPTCG,EP		; SET OPTION CG ROM PAGE
	BRA	CHKS_1			; CHECK STANDARD CG ROM

CHKSCG: MOV.W	#SCGSUM,R0		; SET STANDARD CG CHECK SUM TABLE
	LDC.B	#PAGE STDCG,EP		; SET STANDARD CG ROM PAGE
CHKS_1: BCLR.B	#QEXA16,@EXPNDB 	;
	BCLR.B	#QEXA17,@EXPNDB 	; RESET CG ROM BANK
	BCLR.B	#QEXA18,@EXPNDB 	;
	BCLR.B	#QEXA19,@EXPNDB 	;
CHKS_2: MOV.B	@EXPNDB,R3		; GET CG ROM BANK NO.
	AND.B	#XEXA19+XEXA18+XEXA17+XEXA16,R3
	TST.B	R2			;
	BEQ	CHKS_3			; BR IF NOT BANK NO. DISPLAY
	MOV.W	R2,@-SP 		;
	MOV.W	R0,@-SP 		;
	JSR	@LCDCHR 		; SET DISPLAY POSITION
	JSR	@LCDHX1 		; DISPLAY CG ROM BANK NO.
	MOV.W	@SP+,R0 		;
	MOV.W	@SP+,R2 		;
CHKS_3: MOV.B	@R0+,R1 		; GET CG ROM CHECK SUM
	JSR	@CHKCG			; CHECK CG ROM
	BNE	CHKS_4			; BR IF CHECK SUM ERROR
	CMP.B	#XEXA19+XEXA18+XEXA17+XEXA16,R3
	BEQ	CHKS_5			; BR IF ROM CHECK END
	ADD.B	#1,@EXPNDB		; UPDATE CG ROM BANK
	BRA	CHKS_2			;
					;
CHKS_4: 				;
	SETALM	#ZECG			; SET CG ROM ALARM ERROR
CHKS_5: RTS				;
	.END
