;/*******************************************************
;This program was created by the
;CodeWizardAVR V2.60 Evaluation
;Automatic Program Generator
;© Copyright 1998-2012 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 2012-08-04
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega128
;Program type            : Application
;AVR Core Clock frequency: 16.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 1024
;*******************************************************/
;
;#include <delay.h>
;#include <mega128.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Declare your global variables here
;//unsigned char LedCnt=0;
;
;//------------------ 7-Segment Definition
;//unsigned char FndDef[10] = { 0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x6f };
;
;unsigned int Cnt;
;
;
;void putch(char data)
; 0000 0025 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0026     while(!(UCSR0A & 0x20));
;PCODE: $0000000F VOL: 0
;	data -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0027     UDR0 = data;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0028 }
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;
;// Timer1 overflow interrupt service routine
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 002C {
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 002D // Place your code here
; 0000 002E     TCNT1 = 49911;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 002F //   PORTE = ~FndDef[Cnt++];
; 0000 0030 //   if(Cnt==10) Cnt=0;
; 0000 0031     if(Cnt==0) {
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0032         PORTC = 0xff;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0033         Cnt = 1;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0034     }
; 0000 0035     else {
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0036         PORTC = 0x00;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0037         Cnt = 0;
;PCODE: $00000029 VOL: 0
; 0000 0038     }
;PCODE: $0000002A VOL: 0
; 0000 0039 }
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;
;void main(void)
; 0000 003C {
;PCODE: $0000002E VOL: 0
; 0000 003D // Declare your local variables here
; 0000 003E 
; 0000 003F // Input/Output Ports initialization
; 0000 0040 // Port A initialization
; 0000 0041 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0042 DDRA=(0<<DDA7) | (0<<DDA6) | (0<<DDA5) | (0<<DDA4) | (0<<DDA3) | (0<<DDA2) | (0<<DDA1) | (0<<DDA0);
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0043 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0044 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0045 
; 0000 0046 // Port B initialization
; 0000 0047 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0048 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0049 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 004A PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 004B 
; 0000 004C // Port C initialization
; 0000 004D // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 004E DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 004F // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0050 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0051 
; 0000 0052 // Port D initialization
; 0000 0053 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0054 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0055 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0056 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0057 
; 0000 0058 // Port E initialization
; 0000 0059 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 005A DDRE=(0<<DDE7) | (0<<DDE6) | (0<<DDE5) | (0<<DDE4) | (0<<DDE3) | (0<<DDE2) | (0<<DDE1) | (0<<DDE0);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 005B // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 005C PORTE=(0<<PORTE7) | (0<<PORTE6) | (0<<PORTE5) | (0<<PORTE4) | (0<<PORTE3) | (0<<PORTE2) | (0<<PORTE1) | (0<<PORTE0);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 005D 
; 0000 005E // Port F initialization
; 0000 005F // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0060 DDRF=(0<<DDF7) | (0<<DDF6) | (0<<DDF5) | (0<<DDF4) | (0<<DDF3) | (0<<DDF2) | (0<<DDF1) | (0<<DDF0);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0061 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0062 PORTF=(0<<PORTF7) | (0<<PORTF6) | (0<<PORTF5) | (0<<PORTF4) | (0<<PORTF3) | (0<<PORTF2) | (0<<PORTF1) | (0<<PORTF0);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0063 
; 0000 0064 // Port G initialization
; 0000 0065 // Function: Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 0066 DDRG=(0<<DDG4) | (0<<DDG3) | (0<<DDG2) | (0<<DDG1) | (0<<DDG0);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0067 // State: Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
; 0000 0068 PORTG=(0<<PORTG4) | (0<<PORTG3) | (0<<PORTG2) | (0<<PORTG1) | (0<<PORTG0);
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0069 
; 0000 006A // Timer/Counter 0 initialization
; 0000 006B // Clock source: System Clock
; 0000 006C // Clock value: Timer 0 Stopped
; 0000 006D // Mode: Normal top=0xFF
; 0000 006E // OC0 output: Disconnected
; 0000 006F ASSR=0<<AS0;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0070 TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0071 TCNT0=0x00;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0072 OCR0=0x00;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0073 
; 0000 0074 // Timer/Counter 1 initialization
; 0000 0075 // Clock source: System Clock
; 0000 0076 // Clock value: 15.625 kHz
; 0000 0077 // Mode: Normal top=0xFFFF
; 0000 0078 // OC1A output: Disconnected
; 0000 0079 // OC1B output: Disconnected
; 0000 007A // OC1C output: Disconnected
; 0000 007B // Noise Canceler: Off
; 0000 007C // Input Capture on Falling Edge
; 0000 007D // Timer Period: 4.1943 s
; 0000 007E // Timer1 Overflow Interrupt: On
; 0000 007F // Input Capture Interrupt: Off
; 0000 0080 // Compare A Match Interrupt: Off
; 0000 0081 // Compare B Match Interrupt: Off
; 0000 0082 // Compare C Match Interrupt: Off
; 0000 0083 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<COM1C1) | (0<<COM1C0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0084 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (1<<CS12) | (0<<CS11) | (1<<CS10);
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0085 TCNT1H=0x00;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0086 TCNT1L=0x00;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0087 ICR1H=0x00;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0088 ICR1L=0x00;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0089 OCR1AH=0x00;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 008A OCR1AL=0x00;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 008B OCR1BH=0x00;
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 008C OCR1BL=0x00;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 008D OCR1CH=0x00;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 008E OCR1CL=0x00;
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 008F 
; 0000 0090 // Timer/Counter 2 initialization
; 0000 0091 // Clock source: System Clock
; 0000 0092 // Clock value: Timer2 Stopped
; 0000 0093 // Mode: Normal top=0xFF
; 0000 0094 // OC2 output: Disconnected
; 0000 0095 TCCR2=(0<<WGM20) | (0<<COM21) | (0<<COM20) | (0<<WGM21) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0096 TCNT2=0x00;
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0097 OCR2=0x00;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0098 
; 0000 0099 // Timer/Counter 3 initialization
; 0000 009A // Clock source: System Clock
; 0000 009B // Clock value: Timer3 Stopped
; 0000 009C // Mode: Normal top=0xFFFF
; 0000 009D // OC3A output: Disconnected
; 0000 009E // OC3B output: Disconnected
; 0000 009F // OC3C output: Disconnected
; 0000 00A0 // Noise Canceler: Off
; 0000 00A1 // Input Capture on Falling Edge
; 0000 00A2 // Timer3 Overflow Interrupt: Off
; 0000 00A3 // Input Capture Interrupt: Off
; 0000 00A4 // Compare A Match Interrupt: Off
; 0000 00A5 // Compare B Match Interrupt: Off
; 0000 00A6 // Compare C Match Interrupt: Off
; 0000 00A7 TCCR3A=(0<<COM3A1) | (0<<COM3A0) | (0<<COM3B1) | (0<<COM3B0) | (0<<COM3C1) | (0<<COM3C0) | (0<<WGM31) | (0<<WGM30);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 00A8 TCCR3B=(0<<ICNC3) | (0<<ICES3) | (0<<WGM33) | (0<<WGM32) | (0<<CS32) | (0<<CS31) | (0<<CS30);
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 00A9 TCNT3H=0x00;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 00AA TCNT3L=0x00;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 00AB ICR3H=0x00;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 00AC ICR3L=0x00;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 00AD OCR3AH=0x00;
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 00AE OCR3AL=0x00;
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 00AF OCR3BH=0x00;
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 00B0 OCR3BL=0x00;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 00B1 OCR3CH=0x00;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 00B2 OCR3CL=0x00;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 00B3 
; 0000 00B4 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 00B5 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 00B6 
; 0000 00B7 ETIMSK=(0<<TICIE3) | (0<<OCIE3A) | (0<<OCIE3B) | (0<<TOIE3) | (0<<OCIE3C) | (0<<OCIE1C);
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 00B8 
; 0000 00B9 // External Interrupt(s) initialization
; 0000 00BA // INT0: Off
; 0000 00BB // INT1: Off
; 0000 00BC // INT2: Off
; 0000 00BD // INT3: Off
; 0000 00BE // INT4: Off
; 0000 00BF // INT5: Off
; 0000 00C0 // INT6: Off
; 0000 00C1 // INT7: Off
; 0000 00C2 EICRA=(0<<ISC31) | (0<<ISC30) | (0<<ISC21) | (0<<ISC20) | (0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 00C3 EICRB=(0<<ISC71) | (0<<ISC70) | (0<<ISC61) | (0<<ISC60) | (0<<ISC51) | (0<<ISC50) | (0<<ISC41) | (0<<ISC40);
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 00C4 EIMSK=(0<<INT7) | (0<<INT6) | (0<<INT5) | (0<<INT4) | (0<<INT3) | (0<<INT2) | (0<<INT1) | (0<<INT0);
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 00C5 
; 0000 00C6 // USART0 initialization
; 0000 00C7 // USART0 disabled
; 0000 00C8 //UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (0<<RXEN0) | (0<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
; 0000 00C9 
; 0000 00CA // USART0 initialization
; 0000 00CB // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 00CC // USART0 Receiver: On
; 0000 00CD // USART0 Transmitter: On
; 0000 00CE // USART0 Mode: Asynchronous
; 0000 00CF // USART0 Baud Rate: 9600
; 0000 00D0 UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (0<<U2X0) | (0<<MPCM0);
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 00D1 UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 00D2 UCSR0C=(0<<UMSEL0) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 00D3 UBRR0H=0x00;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 00D4 UBRR0L=0x67;
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 00D5 
; 0000 00D6 
; 0000 00D7 // USART1 initialization
; 0000 00D8 // USART1 disabled
; 0000 00D9 UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (0<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 00DA 
; 0000 00DB // Analog Comparator initialization
; 0000 00DC // Analog Comparator: Off
; 0000 00DD ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 00DE SFIOR=(0<<ACME);
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 00DF 
; 0000 00E0 // ADC initialization
; 0000 00E1 // ADC disabled
; 0000 00E2 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 00E3 
; 0000 00E4 // SPI initialization
; 0000 00E5 // SPI disabled
; 0000 00E6 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 00E7 
; 0000 00E8 // TWI initialization
; 0000 00E9 // TWI disabled
; 0000 00EA TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 00EB 
; 0000 00EC // Global enable interrupts
; 0000 00ED #asm("sei")
;PCODE: $000000A9 VOL: 0
	sei
;PCODE: $000000AA VOL: 0
; 0000 00EE 
; 0000 00EF     PORTC = 0xff;
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 00F0 
; 0000 00F1 while (1)
;PCODE: $000000AD VOL: 0
; 0000 00F2       {
; 0000 00F3       // Place your code here
; 0000 00F4         putch('1');
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 00F5         delay_ms(300);
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 00F6       }
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 00F7 }
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
